<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_input_parser_8h" kind="file" language="C++">
    <compoundname>InputParser.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes refid="_lvps_manager_8h" local="yes">LvpsManager.h</includes>
    <includes refid="_zynq_manager_8h" local="yes">ZynqManager.h</includes>
    <includedby refid="mecontrol_8h" local="yes">src/main/mecontrol.h</includedby>
    <includedby refid="_data_acquisition_8h" local="yes">src/operations/DataAcquisition.h</includedby>
    <includedby refid="_input_parser_8cpp" local="yes">src/tools/InputParser.cpp</includedby>
    <incdepgraph>
      <node id="1037">
        <label>netinet/in.h</label>
      </node>
      <node id="1039">
        <label>arpa/inet.h</label>
      </node>
      <node id="1031">
        <label>iomanip</label>
      </node>
      <node id="1024">
        <label>error.h</label>
      </node>
      <node id="1032">
        <label>ZynqManager.h</label>
        <link refid="_zynq_manager_8h"/>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
      </node>
      <node id="1019">
        <label>LvpsManager.h</label>
        <link refid="_lvps_manager_8h"/>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
      </node>
      <node id="1020">
        <label>errno.h</label>
      </node>
      <node id="1040">
        <label>fcntl.h</label>
      </node>
      <node id="1028">
        <label>fstream</label>
      </node>
      <node id="1038">
        <label>netdb.h</label>
      </node>
      <node id="1025">
        <label>aDIO_library.h</label>
      </node>
      <node id="1036">
        <label>sys/types.h</label>
      </node>
      <node id="1034">
        <label>string.h</label>
      </node>
      <node id="1023">
        <label>unistd.h</label>
      </node>
      <node id="1017">
        <label>vector</label>
      </node>
      <node id="1016">
        <label>src/tools/InputParser.h</label>
        <link refid="_input_parser_8h"/>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
      </node>
      <node id="1029">
        <label>sstream</label>
      </node>
      <node id="1026">
        <label>log.h</label>
        <link refid="log_8h"/>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
      </node>
      <node id="1027">
        <label>sys/time.h</label>
      </node>
      <node id="1030">
        <label>iostream</label>
      </node>
      <node id="1033">
        <label>strings.h</label>
      </node>
      <node id="1022">
        <label>ctype.h</label>
      </node>
      <node id="1035">
        <label>sys/socket.h</label>
      </node>
      <node id="1018">
        <label>algorithm</label>
      </node>
      <node id="1021">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1042">
        <label>src/main/mecontrol.h</label>
        <link refid="mecontrol_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1047">
        <label>src/operations/DataAcquisition.cpp</label>
        <link refid="_data_acquisition_8cpp"/>
      </node>
      <node id="1043">
        <label>src/main/mecontrol.cpp</label>
        <link refid="mecontrol_8cpp"/>
      </node>
      <node id="1044">
        <label>src/operations/DataAcquisition.h</label>
        <link refid="_data_acquisition_8h"/>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1041">
        <label>src/tools/InputParser.h</label>
        <link refid="_input_parser_8h"/>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>src/instrument/RunInstrument.h</label>
        <link refid="_run_instrument_8h"/>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>src/tools/InputParser.cpp</label>
        <link refid="_input_parser_8cpp"/>
      </node>
      <node id="1046">
        <label>src/instrument/RunInstrument.cpp</label>
        <link refid="_run_instrument_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_cmd_line_inputs" prot="public">CmdLineInputs</innerclass>
    <innerclass refid="class_input_parser" prot="public">InputParser</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_input_parser_8h_1a1b77b4ac12733e8572095465458dd64d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string empty_string</definition>
        <argsstring>(&quot;&quot;)</argsstring>
        <name>empty_string</name>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tools/InputParser.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_INPUT_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_INPUT_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lvps_manager_8h" kindref="compound">LvpsManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_zynq_manager_8h" kindref="compound">ZynqManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>struct<sp/>to<sp/>handle<sp/>the<sp/>command<sp/>line<sp/>inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="struct_cmd_line_inputs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>command<sp/>line<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_cmd_line_inputs_1a3caced8b01d112efe51d04001af01a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a3caced8b01d112efe51d04001af01a51" kindref="member">help</ref>;</highlight></codeline>
<codeline lineno="16" refid="struct_cmd_line_inputs_1a245e63ae022f665018212b1a391f8fec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a245e63ae022f665018212b1a391f8fec" kindref="member">hvps_on</ref>;</highlight></codeline>
<codeline lineno="17" refid="struct_cmd_line_inputs_1a865ccb1849979316588536a59213f8a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a865ccb1849979316588536a59213f8a5" kindref="member">hvps_switch</ref>;</highlight></codeline>
<codeline lineno="18" refid="struct_cmd_line_inputs_1afbf6dcfc236f225b09beec20228bb17d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1afbf6dcfc236f225b09beec20228bb17d" kindref="member">debug_mode</ref>;</highlight></codeline>
<codeline lineno="19" refid="struct_cmd_line_inputs_1a88c728d5406ac3afea898f6cd9042de9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a88c728d5406ac3afea898f6cd9042de9" kindref="member">log_on</ref>;</highlight></codeline>
<codeline lineno="20" refid="struct_cmd_line_inputs_1a10db365c09b98a738257a93d6718aeaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a10db365c09b98a738257a93d6718aeaa" kindref="member">trig_on</ref>;</highlight></codeline>
<codeline lineno="21" refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" kindref="member">cam_on</ref>;</highlight></codeline>
<codeline lineno="22" refid="struct_cmd_line_inputs_1a036ab31a6d1c9b9b0c1e4b529eecfd39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a036ab31a6d1c9b9b0c1e4b529eecfd39" kindref="member">therm_on</ref>;</highlight></codeline>
<codeline lineno="23" refid="struct_cmd_line_inputs_1a7e8f543661cd5741d4a1bbe3e24a9030" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a7e8f543661cd5741d4a1bbe3e24a9030" kindref="member">lvps_on</ref>;</highlight></codeline>
<codeline lineno="24" refid="struct_cmd_line_inputs_1a98db4b47df61f89208118dc3e4f56854" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a98db4b47df61f89208118dc3e4f56854" kindref="member">sc_on</ref>;</highlight></codeline>
<codeline lineno="25" refid="struct_cmd_line_inputs_1ab32a29de930637b7a172d507b9c3c8a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1ab32a29de930637b7a172d507b9c3c8a3" kindref="member">single_run</ref>;<sp/></highlight></codeline>
<codeline lineno="26" refid="struct_cmd_line_inputs_1a5c00ff8d6306c48203584982ac2f9524" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a5c00ff8d6306c48203584982ac2f9524" kindref="member">test_zynq_on</ref>;</highlight></codeline>
<codeline lineno="27" refid="struct_cmd_line_inputs_1ad050b3e333d5414fef2848ba2408e1d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1ad050b3e333d5414fef2848ba2408e1d1" kindref="member">keep_zynq_pkt</ref>;</highlight></codeline>
<codeline lineno="28" refid="struct_cmd_line_inputs_1a8aebdd0a34c7ba1ab780102425dfa688" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a8aebdd0a34c7ba1ab780102425dfa688" kindref="member">check_status</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>command<sp/>line<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="struct_cmd_line_inputs_1a93e2a8e691377cb64562c164ddc1cc59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a93e2a8e691377cb64562c164ddc1cc59" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="32" refid="struct_cmd_line_inputs_1ae04912996c647a651112560d79720b18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1ae04912996c647a651112560d79720b18" kindref="member">hvdac</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_cmd_line_inputs_1ae165595c206085e64818cd797686c2f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_lvps_manager_1a28b906147042a75a75377858218fe1b6" kindref="member">LvpsManager::Status</ref><sp/><ref refid="struct_cmd_line_inputs_1ae165595c206085e64818cd797686c2f0" kindref="member">lvps_status</ref>;</highlight></codeline>
<codeline lineno="34" refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ad" kindref="member">LvpsManager::SubSystem</ref><sp/><ref refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" kindref="member">lvps_subsystem</ref>;</highlight></codeline>
<codeline lineno="35" refid="struct_cmd_line_inputs_1aa5258d4d03d904691d976207be2178c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1" kindref="member">ZynqManager::HvpsStatus</ref><sp/><ref refid="struct_cmd_line_inputs_1aa5258d4d03d904691d976207be2178c8" kindref="member">hvps_status</ref>;</highlight></codeline>
<codeline lineno="36" refid="struct_cmd_line_inputs_1a7276bad10d5b41996c2c52aae0d239dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddf" kindref="member">ZynqManager::InstrumentMode</ref><sp/><ref refid="struct_cmd_line_inputs_1a7276bad10d5b41996c2c52aae0d239dd" kindref="member">zynq_mode</ref>;</highlight></codeline>
<codeline lineno="37" refid="struct_cmd_line_inputs_1a8c1b2aca97fe4c468860bfb1d7ca5fd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213" kindref="member">ZynqManager::TestMode</ref><sp/><ref refid="struct_cmd_line_inputs_1a8c1b2aca97fe4c468860bfb1d7ca5fd3" kindref="member">zynq_test_mode</ref>;</highlight></codeline>
<codeline lineno="38" refid="struct_cmd_line_inputs_1a480650fe2fe4cc380125e987e02baaa5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs_1a480650fe2fe4cc380125e987e02baaa5" kindref="member">cam_verbose</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>empty_string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>class<sp/>to<sp/>parse<sp/>command<sp/>line<sp/>input<sp/>to<sp/>program<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_input_parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_input_parser" kindref="compound">InputParser</ref>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="class_input_parser_1af608154335b0e4b3677147135d417d65" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/><ref refid="class_input_parser_1af608154335b0e4b3677147135d417d65" kindref="member">CmdLine</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="class_input_parser_1af9fa5ead1f28b5294a713410df5b9531" kindref="member">InputParser</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/><ref refid="class_input_parser_1abe64c860556d66810e39d0d590002d88" kindref="member">ParseCmdLineInputs</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>command<sp/>line<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_input_parser_1ac5d0fbee4cb1d4aea2931a4796b42448" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_input_parser_1ac5d0fbee4cb1d4aea2931a4796b42448" kindref="member">getCmdOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;option)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;::const_iterator<sp/>itr;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>itr<sp/>=<sp/>std::find(this-&gt;tokens.begin(),<sp/>this-&gt;tokens.end(),<sp/>option);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr<sp/>!=<sp/>this-&gt;tokens.end())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itr++;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itr++<sp/>!=<sp/>this-&gt;tokens.end())<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>itr--;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<sp/>itr;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty_string;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>the<sp/>command<sp/>line<sp/>options<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_input_parser_1aea813a8d6ee9ea6d250ab99333316bdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_input_parser_1aea813a8d6ee9ea6d250ab99333316bdf" kindref="member">cmdOptionExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;option)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::find(this-&gt;tokens.begin(),<sp/>this-&gt;tokens.end(),<sp/>option)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/>this-&gt;tokens.end();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>std::vector<sp/>&lt;std::string&gt;<sp/>tokens;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PrintHelpMsg();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>_INPUT_PARSER_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/tools/InputParser.h"/>
  </compounddef>
</doxygen>
