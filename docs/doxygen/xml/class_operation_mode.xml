<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_operation_mode" kind="class" language="C++" prot="public">
    <compoundname>OperationMode</compoundname>
    <derivedcompoundref refid="class_data_acquisition" prot="public" virt="non-virtual">DataAcquisition</derivedcompoundref>
    <derivedcompoundref refid="class_data_reduction" prot="public" virt="non-virtual">DataReduction</derivedcompoundref>
    <includes refid="_operation_mode_8h" local="no">OperationMode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" prot="public" static="no" mutable="no">
        <type><ref refid="class_analog_manager" kindref="compound">AnalogManager</ref> *</type>
        <definition>AnalogManager* OperationMode::Analog</definition>
        <argsstring></argsstring>
        <name>Analog</name>
        <initializer>= new <ref refid="class_analog_manager" kindref="compound">AnalogManager</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlled of the analog subsystem </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="17" column="1" bodyfile="src/operations/OperationMode.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_operation_mode_1a191135ef67e176c036296fbcdf443c73" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex OperationMode::_m_switch</definition>
        <argsstring></argsstring>
        <name>_m_switch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to handle mode switching in a thread-safe way </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="32" column="1" bodyfile="src/operations/OperationMode.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_operation_mode_1abfdfc50fff9045cc980be2c486936f21" prot="protected" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable OperationMode::_cv_switch</definition>
        <argsstring></argsstring>
        <name>_cv_switch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to wait for a mode switch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="36" column="1" bodyfile="src/operations/OperationMode.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_operation_mode_1add634bb194be6d29ec9449a8ceae1da3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool OperationMode::_switch</definition>
        <argsstring></argsstring>
        <name>_switch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to notify of a mode switch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="40" column="1" bodyfile="src/operations/OperationMode.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_operation_mode_1ae5f600e33d74a4567e3363f461d48e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OperationMode::OperationMode</definition>
        <argsstring>()</argsstring>
        <name>OperationMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="19" column="1" bodyfile="src/operations/OperationMode.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_operation_mode_1abea0ed26f35b9d8f70107d3c40bdcaa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OperationMode::Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <reimplementedby refid="class_data_reduction_1a6f20896263ad8071b7dda6e63732f5a0">Start</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>start the operational mode, virtual function for overloading </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="22" column="1" bodyfile="src/operations/OperationMode.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_operation_mode_1afd531303d950050f3e978bd6fc7a39e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OperationMode::Stop</definition>
        <argsstring>()</argsstring>
        <name>Stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OperationMode::Notify</definition>
        <argsstring>()</argsstring>
        <name>Notify</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>notify the object of a mode switch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="25" column="1" bodyfile="src/operations/OperationMode.cpp" bodystart="15" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_operation_mode_1ae194e6169bbf783a45d8ee6669e75355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OperationMode::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reset the objects mode switch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/operations/OperationMode.h" line="26" column="1" bodyfile="src/operations/OperationMode.cpp" bodystart="31" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>base class for an operational mode </para>    </detaileddescription>
    <inheritancegraph>
      <node id="112">
        <label>DataAcquisition</label>
        <link refid="class_data_acquisition"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>DataReduction</label>
        <link refid="class_data_reduction"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>OperationMode</label>
        <link refid="class_operation_mode"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="115">
        <label>AnalogManager</label>
        <link refid="class_analog_manager"/>
      </node>
      <node id="114">
        <label>OperationMode</label>
        <link refid="class_operation_mode"/>
        <childnode refid="115" relation="usage">
          <edgelabel>Analog</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/operations/OperationMode.h" line="12" column="1" bodyfile="src/operations/OperationMode.h" bodystart="12" bodyend="42"/>
    <listofallmembers>
      <member refid="class_operation_mode_1abfdfc50fff9045cc980be2c486936f21" prot="protected" virt="non-virtual"><scope>OperationMode</scope><name>_cv_switch</name></member>
      <member refid="class_operation_mode_1a191135ef67e176c036296fbcdf443c73" prot="protected" virt="non-virtual"><scope>OperationMode</scope><name>_m_switch</name></member>
      <member refid="class_operation_mode_1add634bb194be6d29ec9449a8ceae1da3" prot="protected" virt="non-virtual"><scope>OperationMode</scope><name>_switch</name></member>
      <member refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" prot="public" virt="non-virtual"><scope>OperationMode</scope><name>Analog</name></member>
      <member refid="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" prot="public" virt="non-virtual"><scope>OperationMode</scope><name>Notify</name></member>
      <member refid="class_operation_mode_1ae5f600e33d74a4567e3363f461d48e92" prot="public" virt="non-virtual"><scope>OperationMode</scope><name>OperationMode</name></member>
      <member refid="class_operation_mode_1ae194e6169bbf783a45d8ee6669e75355" prot="public" virt="non-virtual"><scope>OperationMode</scope><name>Reset</name></member>
      <member refid="class_operation_mode_1abea0ed26f35b9d8f70107d3c40bdcaa2" prot="public" virt="virtual"><scope>OperationMode</scope><name>Start</name></member>
      <member refid="class_operation_mode_1afd531303d950050f3e978bd6fc7a39e4" prot="public" virt="non-virtual"><scope>OperationMode</scope><name>Stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
