<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_run_instrument_8cpp" kind="file" language="C++">
    <compoundname>RunInstrument.cpp</compoundname>
    <includes refid="_run_instrument_8h" local="yes">RunInstrument.h</includes>
    <incdepgraph>
      <node id="57">
        <label>libusb-1.0/libusb.h</label>
      </node>
      <node id="76">
        <label>CamManager.h</label>
        <link refid="_cam_manager_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>netinet/in.h</label>
      </node>
      <node id="73">
        <label>arpa/inet.h</label>
      </node>
      <node id="55">
        <label>iomanip</label>
      </node>
      <node id="48">
        <label>error.h</label>
      </node>
      <node id="87">
        <label>dm75xx_library.h</label>
      </node>
      <node id="66">
        <label>ZynqManager.h</label>
        <link refid="_zynq_manager_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>stdint.h</label>
      </node>
      <node id="77">
        <label>stdlib.h</label>
      </node>
      <node id="43">
        <label>LvpsManager.h</label>
        <link refid="_lvps_manager_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>ConfigManager.h</label>
        <link refid="_config_manager_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>errno.h</label>
      </node>
      <node id="62">
        <label>stdexcept</label>
      </node>
      <node id="74">
        <label>fcntl.h</label>
      </node>
      <node id="90">
        <label>pdmdata.h</label>
        <link refid="pdmdata_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>string</label>
      </node>
      <node id="93">
        <label>regex</label>
      </node>
      <node id="52">
        <label>fstream</label>
      </node>
      <node id="72">
        <label>netdb.h</label>
      </node>
      <node id="81">
        <label>DataAcquisition.h</label>
        <link refid="_data_acquisition_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>CpuTools.h</label>
        <link refid="_cpu_tools_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>aDIO_library.h</label>
      </node>
      <node id="85">
        <label>condition_variable</label>
      </node>
      <node id="70">
        <label>sys/types.h</label>
      </node>
      <node id="68">
        <label>string.h</label>
      </node>
      <node id="60">
        <label>cstdio</label>
      </node>
      <node id="79">
        <label>future</label>
      </node>
      <node id="95">
        <label>boost/crc.hpp</label>
      </node>
      <node id="47">
        <label>unistd.h</label>
      </node>
      <node id="89">
        <label>vector</label>
      </node>
      <node id="78">
        <label>signal.h</label>
      </node>
      <node id="97">
        <label>InputParser.h</label>
        <link refid="_input_parser_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>array</label>
      </node>
      <node id="53">
        <label>sstream</label>
      </node>
      <node id="88">
        <label>data_format.h</label>
        <link refid="data__format_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>log.h</label>
        <link refid="log_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sys/time.h</label>
      </node>
      <node id="54">
        <label>iostream</label>
      </node>
      <node id="56">
        <label>UsbManager.h</label>
        <link refid="_usb_manager_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>strings.h</label>
      </node>
      <node id="46">
        <label>ctype.h</label>
      </node>
      <node id="83">
        <label>OperationMode.h</label>
        <link refid="_operation_mode_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>mutex</label>
      </node>
      <node id="80">
        <label>chrono</label>
      </node>
      <node id="69">
        <label>sys/socket.h</label>
      </node>
      <node id="42">
        <label>RunInstrument.h</label>
        <link refid="_run_instrument_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>thread</label>
      </node>
      <node id="98">
        <label>DataReduction.h</label>
        <link refid="_data_reduction_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>sys/inotify.h</label>
      </node>
      <node id="75">
        <label>algorithm</label>
      </node>
      <node id="92">
        <label>ThermManager.h</label>
        <link refid="_therm_manager_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>stdio.h</label>
      </node>
      <node id="94">
        <label>SynchronisedFile.h</label>
        <link refid="_synchronised_file_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>src/instrument/RunInstrument.cpp</label>
        <link refid="_run_instrument_8cpp"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>AnalogManager.h</label>
        <link refid="_analog_manager_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>memory</label>
      </node>
      <node id="65">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_run_instrument_8cpp_1ac4787225e079fc02e632da15f0a2b85f" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; signal_shutdown</definition>
        <argsstring></argsstring>
        <name>signal_shutdown</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/instrument/RunInstrument.cpp" line="3" column="1" bodyfile="src/instrument/RunInstrument.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_run_instrument_8h" kindref="compound">RunInstrument.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">std::atomic&lt;bool&gt;<sp/><ref refid="_run_instrument_8cpp_1ac4787225e079fc02e632da15f0a2b85f" kindref="member">signal_shutdown</ref>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="class_run_instrument_1a996d51e4ada6831284872c8d0ddc2ab6" kindref="member">RunInstrument::RunInstrument</ref>(<ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/>CmdLine)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>this-&gt;CmdLine<sp/>=<sp/><ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;<ref refid="class_run_instrument_1ae5efe428957b1c5676c64dfd05ade775" kindref="member">m_inst_mode</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a8dfdbe81fa8e65bc70e7f22e4dedb3e1" kindref="member">current_inst_mode</ref><sp/>=<sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58a1f73b7c211c8da6c46149f426e10e5bf" kindref="member">RunInstrument::INST_UNDEF</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>relase<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1af6acb65aa21abca4603c592cc2e4be5a" kindref="member">current_acq_mode</ref><sp/>=<sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69a5827f32ee9bddd4824748116e734ab9d" kindref="member">RunInstrument::ACQ_UNDEF</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;_m_stop);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_stop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>relase<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RunInstrument::SignalHandler(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;interrupt<sp/>signal<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>received&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>to<sp/>main<sp/>program<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="_run_instrument_8cpp_1ac4787225e079fc02e632da15f0a2b85f" kindref="member">signal_shutdown</ref>.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::LvpsSwitch()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae165595c206085e64818cd797686c2f0" kindref="member">lvps_status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a28b906147042a75a75377858218fe1b6a5b38403228eaec52d40b9f7a869897be" kindref="member">LvpsManager::ON</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" kindref="member">lvps_subsystem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>ON<sp/>the<sp/>ZYNQ&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>ON<sp/>the<sp/>CAMERAS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>ON<sp/>the<sp/>HK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" kindref="member">lvps_subsystem</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a28b906147042a75a75377858218fe1b6a74cb543a684b5c074965074293f914a6" kindref="member">LvpsManager::OFF</ref>:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" kindref="member">lvps_subsystem</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>OFF<sp/>the<sp/>ZYNQ&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>OFF<sp/>the<sp/>CAMERAS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>OFF<sp/>the<sp/>HK&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a5b639db0650084c1e39b4b6bcd023bb1" kindref="member">lvps_subsystem</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_lvps_manager_1a28b906147042a75a75377858218fe1b6a809cb492d514212fa0d1254d235699da" kindref="member">LvpsManager::UNDEF</ref>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Cannot<sp/>switch<sp/>subsystem,<sp/>on/off<sp/>undefined&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::HvpsSwitch()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1aa5258d4d03d904691d976207be2178c8" kindref="member">hvps_status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1ae11fe7979814ec644b6848fca4835fca" kindref="member">ZynqManager::ON</ref>:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>ON<sp/>the<sp/>HVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1abd4555943234c7cbeb89525f48106b0a" kindref="member">HvpsTurnOn</ref>(this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>-&gt;<ref refid="struct_config_1a5bbcb3af65d60c300849a1799243a209" kindref="member">cathode_voltage</ref>,<sp/>this-&gt;ConfigOut-&gt;dynode_voltage);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a96edfca4dd9f310be5fa64ca2be734ff" kindref="member">SetDac</ref>(this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>-&gt;<ref refid="struct_config_1a625448f4ce113cf62014125ab6d7c887" kindref="member">dac_level</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1a8d34598513f64590dac8620c0f2f1dbb" kindref="member">ZynqManager::OFF</ref>:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>OFF<sp/>the<sp/>HVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a06e33d748fef60a4dc40cded5526ab75" kindref="member">HvpsTurnOff</ref>();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a96edfca4dd9f310be5fa64ca2be734ff" kindref="member">SetDac</ref>(<ref refid="_zynq_manager_8h_1ae748eecf76b864fac5ac6dc7015544cf" kindref="member">PEDESTAL</ref>);<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1ad69401c71fa8c52fd8b715ad29702a99" kindref="member">ZynqManager::UNDEF</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Cannot<sp/>switch<sp/>subsystem,<sp/>on/off<sp/>undefined&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::CheckStatus()<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>zynq<sp/>board<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1adf1e86c89592758915e7357bf7989595" kindref="member">CheckTelnet</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>instrument<sp/>and<sp/>HV<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a56b95f7ffd34292a8863cd7c39e39a0a" kindref="member">GetInstStatus</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a5259383f5f9a7e9a8816803c45d25fdd" kindref="member">GetHvpsStatus</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Zynq<sp/>cannot<sp/>reach<sp/>Mini-EUSO<sp/>over<sp/>telnet&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>try<sp/>to<sp/>ping<sp/>192.168.7.10<sp/>then<sp/>try<sp/>again&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::DebugMode()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>through<sp/>main<sp/>subsystems<sp/>for<sp/>easy<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mini-EUSO<sp/>software<sp/>debug<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;https://github.com/cescalara/minieuso_cpu&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;running<sp/>checks<sp/>of<sp/>all<sp/>subsystems...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;USB&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;there<sp/>are<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1a7f0fc76903911c3fef6361091272dca9" kindref="member">LookupUsbStorage</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>USB<sp/>storage<sp/>devices<sp/>connected&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>on<sp/>all<sp/>subsystems...<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cameras<sp/>ON<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HK<sp/>ON&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Zynq<sp/>ON&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ANALOG&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;running<sp/>an<sp/>acquisition...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1a2601276811b57c53e68954d4e0c925e9" kindref="member">GetLightLevel</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>light_level<sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1af2606ea4f43b699304e12c509c661e89" kindref="member">ReadLightLevel</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="data__format_8h_1ac21585feb5b0c4d0db27d27edffbdd3a" kindref="member">N_CHANNELS_PHOTODIODE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;photodiode<sp/>channel<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>light_level-&gt;photodiode_data[i]<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>avg_sipm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="data__format_8h_1ae3d059c4bf8bdd664a21c81ac911af3d" kindref="member">N_CHANNELS_SIPM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>avg_sipm<sp/>+=<sp/>light_level-&gt;sipm_data[i];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>avg_sipm<sp/>=<sp/>avg_sipm/<ref refid="data__format_8h_1ae3d059c4bf8bdd664a21c81ac911af3d" kindref="member">N_CHANNELS_SIPM</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIPM<sp/>64<sp/>channel<sp/>average:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>avg_sipm<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SIPM<sp/>single<sp/>channel:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>light_level-&gt;sipm_single<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;THERMISTORS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;running<sp/>an<sp/>acquisition<sp/>(takes<sp/>~10<sp/>s)...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>-&gt;<ref refid="class_therm_manager_1a4fa97967e3b392377049e1aebf4e333a" kindref="member">PrintTemperature</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>uncomment<sp/>when<sp/>ST<sp/>has<sp/>given<sp/>updates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/>this-&gt;Lvps.SwitchOn(LvpsManager::CAMERAS);</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;CAMERAS&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;running<sp/>an<sp/>acquisition...&quot;<sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/>this-&gt;CmdLine-&gt;cam_on<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/>this-&gt;CmdLine-&gt;cam_verbose<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/>this-&gt;LaunchCam();</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;stopping<sp/>acquisition...<sp/>&quot;;</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/>this-&gt;Cam.KillCamAcq();</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;done!&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/>this-&gt;Lvps.SwitchOff(LvpsManager::CAMERAS);</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ZYNQ&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1adf1e86c89592758915e7357bf7989595" kindref="member">CheckTelnet</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a56b95f7ffd34292a8863cd7c39e39a0a" kindref="member">GetInstStatus</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a5259383f5f9a7e9a8816803c45d25fdd" kindref="member">GetHvpsStatus</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Zynq<sp/>cannot<sp/>reach<sp/>Mini-EUSO<sp/>over<sp/>telnet&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>try<sp/>to<sp/>ping<sp/>192.168.7.10<sp/>then<sp/>try<sp/>again&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>off<sp/>all<sp/>subsystems...<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cameras<sp/>OFF&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HK<sp/>OFF&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Zynq<sp/>OFF<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;done!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;debug<sp/>tests<sp/>completed,<sp/>exiting<sp/>the<sp/>program&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1ae7126724f4d87c8ada0da39eee5c599e" kindref="member">RunInstrument::SetInstMode</ref>(InstrumentMode<sp/>mode_to_set)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;<ref refid="class_run_instrument_1ae5efe428957b1c5676c64dfd05ade775" kindref="member">m_inst_mode</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a8dfdbe81fa8e65bc70e7f22e4dedb3e1" kindref="member">current_inst_mode</ref><sp/>=<sp/>mode_to_set;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>release<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58" kindref="member">RunInstrument::InstrumentMode</ref><sp/><ref refid="class_run_instrument_1a24318f1fba2719afdeb5f28f25f37a4c" kindref="member">RunInstrument::GetInstMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58" kindref="member">InstrumentMode</ref><sp/><ref refid="class_run_instrument_1a8dfdbe81fa8e65bc70e7f22e4dedb3e1" kindref="member">current_inst_mode</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;<ref refid="class_run_instrument_1ae5efe428957b1c5676c64dfd05ade775" kindref="member">m_inst_mode</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>current_inst_mode<sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a8dfdbe81fa8e65bc70e7f22e4dedb3e1" kindref="member">current_inst_mode</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>release<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1a8dfdbe81fa8e65bc70e7f22e4dedb3e1" kindref="member">current_inst_mode</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::InitInstMode()<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>the<sp/>instrument<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>current<sp/>light<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1a2601276811b57c53e68954d4e0c925e9" kindref="member">GetLightLevel</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>above_light_threshold<sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1a7a31ea8b7364f39b27081c04c22e052f" kindref="member">CompareLightLevel</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>a<sp/>decision<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(above_light_threshold)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>day<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae7126724f4d87c8ada0da39eee5c599e" kindref="member">SetInstMode</ref>(<ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58abfae682baa0f084bdc86b5ac59909c2d" kindref="member">RunInstrument::DAY</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>night<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae7126724f4d87c8ada0da39eee5c599e" kindref="member">SetInstMode</ref>(<ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58ac1162ad0374f6fa4fc4104dfef112463" kindref="member">RunInstrument::NIGHT</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::StartUp()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mini-EUSO<sp/>CPU<sp/>SOFTWARE<sp/>Version:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_run_instrument_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf" kindref="member">VERSION</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Date:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_run_instrument_8h_1a7ce9237c0650e8b129d6211eed3e5cd0" kindref="member">VERSION_DATE_STRING</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;https://github.com/cescalara/minieuso_cpu&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>log<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a88c728d5406ac3afea898f6cd9042de9" kindref="member">log_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref>.<ref refid="classlogstream_1aa8b1099a6442ec0a69b98ee9a6e7b4fa" kindref="member">change_log_level</ref>(<ref refid="classlogstream_1af041782901906373bcfb446534757eb8aafe0d6be60348f155c1fca6c241abac5" kindref="member">logstream::all</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>log<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;rm<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="log_8cpp_1a8779964f932c525ed6d4fc9d824838ab" kindref="member">log_name</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>system(cmd.c_str());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;log<sp/>created&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reload<sp/>and<sp/>parse<sp/>the<sp/>configuration<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::string<sp/>config_dir(<ref refid="_config_manager_8h_1ad3403f174a7be282e24dd51895067968" kindref="member">CONFIG_DIR</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>std::string<sp/>config_file<sp/>=<sp/>config_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/dummy.conf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>std::string<sp/>config_file_local<sp/>=<sp/>config_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/dummy_local.conf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_config_manager" kindref="compound">ConfigManager</ref><sp/>CfManager(config_file,<sp/>config_file_local);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref><sp/>=<sp/>CfManager.Configure();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>command<sp/>line<sp/>override<sp/>to<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a93e2a8e691377cb64562c164ddc1cc59" kindref="member">dv</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>-&gt;<ref refid="struct_config_1a866159dee6f5dc32675163e11388da49" kindref="member">dynode_voltage</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a93e2a8e691377cb64562c164ddc1cc59" kindref="member">dv</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae04912996c647a651112560d79720b18" kindref="member">hvdac</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>-&gt;<ref refid="struct_config_1a625448f4ce113cf62014125ab6d7c887" kindref="member">dac_level</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae04912996c647a651112560d79720b18" kindref="member">hvdac</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::CheckSystems()<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SUBSYSTEMS<sp/>TO<sp/>BE<sp/>USED<sp/>IN<sp/>ACQUISITION&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Zynq<sp/>board&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Analog<sp/>board&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a245e63ae022f665018212b1a391f8fec" kindref="member">hvps_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;HVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" kindref="member">cam_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cameras&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a036ab31a6d1c9b9b0c1e4b529eecfd39" kindref="member">therm_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Thermistors&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;STARTING<sp/>INSTRUMENT&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>on<sp/>all<sp/>systems<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>on<sp/>all<sp/>systems...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" kindref="member">cam_on</ref><sp/>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a39a1cba7ce277fcc261ef6b60bdc3094" kindref="member">SwitchOn</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>boot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;waiting<sp/>for<sp/>boot...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>sleep(<ref refid="_run_instrument_8h_1a5ab03916aa2a1644de4a108701c277f1" kindref="member">BOOT_TIME</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>this-&gt;CheckStatus();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>number<sp/>storage<sp/>Usbs<sp/>connected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;there<sp/>are<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1a7f0fc76903911c3fef6361091272dca9" kindref="member">LookupUsbStorage</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>USB<sp/>storage<sp/>devices<sp/>connected<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_data_acquisition_1abb672ec183e304bca94c944de0857e60" kindref="member">usb_num_storage_dev</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1a97646fc9649137739f833bd8bc8e830b" kindref="member">num_storage_dev</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1a8a1554258516ae118da1ef92c631a995" kindref="member">usb_num_storage_dev</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1a97646fc9649137739f833bd8bc8e830b" kindref="member">num_storage_dev</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialise<sp/>the<sp/>instrument<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>InitInstMode();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::SelectAcqOption()<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>standard<sp/>or<sp/>scurve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a98db4b47df61f89208118dc3e4f56854" kindref="member">sc_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1af6acb65aa21abca4603c592cc2e4be5a" kindref="member">current_acq_mode</ref><sp/>=<sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69ad379a4b995bea6eaec129f48207fcd5b" kindref="member">SCURVE</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1af6acb65aa21abca4603c592cc2e4be5a" kindref="member">current_acq_mode</ref><sp/>=<sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69af2c16966af0d04464ebad7806e53a7a8" kindref="member">STANDARD</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>Zynq<sp/>acquisition<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a7276bad10d5b41996c2c52aae0d239dd" kindref="member">zynq_mode</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a8c1b2aca97fe4c468860bfb1d7ca5fd3" kindref="member">zynq_test_mode</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::LaunchCam()<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>check<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ac035915a8cad353926632b2e61369764" kindref="member">n_relaunch_attempt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>launch<sp/>cameras,<sp/>if<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" kindref="member">cam_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>verbosity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a480650fe2fe4cc380125e987e02baaa5" kindref="member">cam_verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1af48813c7c6d9c46c0d856ab71596e7af" kindref="member">SetVerbose</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>check<sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1abf91c3d789007be17ffc9edfab13e2e4" kindref="member">CollectData</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>react<sp/>if<sp/>launched<sp/>with<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((check<sp/>!=<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>(this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ac035915a8cad353926632b2e61369764" kindref="member">n_relaunch_attempt</ref><sp/>&lt;<sp/><ref refid="_cam_manager_8h_1a163de8714baecce80d3b8f1e11194725" kindref="member">N_TRY_RELAUNCH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>relaunch<sp/>attempt<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ac035915a8cad353926632b2e61369764" kindref="member">n_relaunch_attempt</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;camera<sp/>relaunch<sp/>attempt<sp/>no.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ac035915a8cad353926632b2e61369764" kindref="member">n_relaunch_attempt</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rebooting<sp/>the<sp/>cameras&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rebooting<sp/>the<sp/>cameras&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reboot<sp/>the<sp/>cameras<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Relaunching<sp/>the<sp/>cameras&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;relaunching<sp/>the<sp/>cameras&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>relaunch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check<sp/>=<sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1abf91c3d789007be17ffc9edfab13e2e4" kindref="member">CollectData</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ac035915a8cad353926632b2e61369764" kindref="member">n_relaunch_attempt</ref>++;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>cameras<sp/>failed<sp/>to<sp/>relaunch&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cameras<sp/>failed<sp/>to<sp/>relaunch&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::MonitorInstrument()<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>launch<sp/>a<sp/>thread<sp/>to<sp/>watch<sp/>the<sp/>photodiode<sp/>measurements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>std::thread<sp/>instrument_monitor<sp/>(&amp;RunInstrument::PollInstrument,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>detach<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>instrument_monitor.detach();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::SetStop()<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;_m_stop);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>release<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RunInstrument::CheckStop()<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_status;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;_m_stop);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>stop_status<sp/>=<sp/>this-&gt;_stop;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>release<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stop_status;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::PollInstrument()<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>different<sp/>procedure<sp/>for<sp/>day<sp/>and<sp/>night<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="_run_instrument_8cpp_1ac4787225e079fc02e632da15f0a2b85f" kindref="member">signal_shutdown</ref>.load())<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_run_instrument_1a24318f1fba2719afdeb5f28f25f37a4c" kindref="member">GetInstMode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58ac1162ad0374f6fa4fc4104dfef112463" kindref="member">NIGHT</ref>:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>output<sp/>of<sp/>the<sp/>analog<sp/>acquisition<sp/>is<sp/>below<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep(<ref refid="_analog_manager_8h_1a310fc17ce8b4d9922f77b72d88c1ab8a" kindref="member">LIGHT_POLL_TIME</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1a7a31ea8b7364f39b27081c04c22e052f" kindref="member">CompareLightLevel</ref>())<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>mode<sp/>to<sp/>DAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" kindref="member">Notify</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae7126724f4d87c8ada0da39eee5c599e" kindref="member">SetInstMode</ref>(<ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58abfae682baa0f084bdc86b5ac59909c2d" kindref="member">DAY</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58abfae682baa0f084bdc86b5ac59909c2d" kindref="member">DAY</ref>:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>output<sp/>of<sp/>analog<sp/>acquisition<sp/>is<sp/>above<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep(<ref refid="_analog_manager_8h_1a310fc17ce8b4d9922f77b72d88c1ab8a" kindref="member">LIGHT_POLL_TIME</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_run_instrument_1ac0038f40c81db9a3ed16494e5e235b78" kindref="member">Data</ref>.<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1a7a31ea8b7364f39b27081c04c22e052f" kindref="member">CompareLightLevel</ref>())<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>mode<sp/>to<sp/>NIGHT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ac0038f40c81db9a3ed16494e5e235b78" kindref="member">Data</ref>.<ref refid="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" kindref="member">Notify</ref>();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae7126724f4d87c8ada0da39eee5c599e" kindref="member">SetInstMode</ref>(<ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58ac1162ad0374f6fa4fc4104dfef112463" kindref="member">NIGHT</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58a1f73b7c211c8da6c46149f426e10e5bf" kindref="member">INST_UNDEF</ref>:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>instrument<sp/>mode<sp/>is<sp/>undefined&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>loop<sp/>when<sp/>stop<sp/>signal<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>SetStop();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>running<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stopping<sp/>joinable<sp/>threads...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stopping<sp/>joinable<sp/>threads...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_run_instrument_1a24318f1fba2719afdeb5f28f25f37a4c" kindref="member">GetInstMode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58ac1162ad0374f6fa4fc4104dfef112463" kindref="member">NIGHT</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" kindref="member">Notify</ref>();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58abfae682baa0f084bdc86b5ac59909c2d" kindref="member">DAY</ref>:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ac0038f40c81db9a3ed16494e5e235b78" kindref="member">Data</ref>.<ref refid="class_operation_mode_1a6b26b89083523650d675f310f9b156c4" kindref="member">Notify</ref>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58a1f73b7c211c8da6c46149f426e10e5bf" kindref="member">INST_UNDEF</ref>:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>undefined,<sp/>no<sp/>threads<sp/>to<sp/>stop&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>undefined,<sp/>no<sp/>threads<sp/>to<sp/>stop&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;exiting<sp/>instrument<sp/>monitoring<sp/>thread...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;exiting<sp/>instrument<sp/>monitoring<sp/>thread...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::Acquisition()<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>acquisition<sp/>run...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>acquisition<sp/>run&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>FTP<sp/>server<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="class_cpu_tools_1a49ae9c7dc6f42ac6e91c7e1d904ee645" kindref="member">CpuTools::ClearFolder</ref>(<ref refid="_run_instrument_8h_1a48cc0a91e8f54c62f3341c21c8cc74e8" kindref="member">DATA_DIR</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>acquisition<sp/>with<sp/>cameras<sp/>if<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>this-&gt;LaunchCam();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>SCURVE<sp/>or<sp/>STANDARD<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>SelectAcqOption();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1af6acb65aa21abca4603c592cc2e4be5a" kindref="member">current_acq_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69ad379a4b995bea6eaec129f48207fcd5b" kindref="member">SCURVE</ref>:</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>an<sp/>scurve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_data_acquisition_1a896eb8e27c5d4587e1c6bf9b4ba67600" kindref="member">CollectSc</ref>(&amp;this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>,<sp/>this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>,<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69af2c16966af0d04464ebad7806e53a7a8" kindref="member">STANDARD</ref>:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>data<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_data_acquisition_1a11e48bbcbc51b6c02486ccf48614f3e9" kindref="member">CollectData</ref>(&amp;this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>,<sp/>this-&gt;<ref refid="class_run_instrument_1aa4f561e76a233c0e325f9fb2fc8739d5" kindref="member">ConfigOut</ref>,<sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aa1cc433573a87358dc8e14279aeebd69a5827f32ee9bddd4824748116e734ab9d" kindref="member">ACQ_UNDEF</ref>:</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RunInstrument<sp/>AcquisitionMode<sp/>is<sp/>undefined&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>RunInstrument<sp/>AcquisitionMode<sp/>is<sp/>undefined&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reached<sp/>for<sp/>SCURVE<sp/>acq<sp/>and<sp/>instrument<sp/>mode<sp/>switch<sp/>or<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1ae6172212a136f5c803e6af0a5e2daa53" kindref="member">cam_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ad6f8151290a70d0b00ec7ef331851706" kindref="member">KillCamAcq</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::NightOperations()<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;entering<sp/>NIGHT<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;entering<sp/>NIGHT<sp/>mode...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>mode<sp/>switching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1aab08eb44b8a6c4a9d7bc4595f8b9039f" kindref="member">Daq</ref>.<ref refid="class_operation_mode_1ae194e6169bbf783a45d8ee6669e75355" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>HV<sp/>as<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a245e63ae022f665018212b1a391f8fec" kindref="member">hvps_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>HvpsSwitch();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>data<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>acquisition<sp/>runs<sp/>until<sp/>signal<sp/>to<sp/>switch<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>Acquisition();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>HV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1aa5258d4d03d904691d976207be2178c8" kindref="member">hvps_status</ref><sp/>=<sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1a8d34598513f64590dac8620c0f2f1dbb" kindref="member">ZynqManager::OFF</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>HvpsSwitch();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RunInstrument::DayOperations()<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;entering<sp/>DAY<sp/>mode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;entering<sp/>DAY<sp/>mode...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>mode<sp/>switching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ac0038f40c81db9a3ed16494e5e235b78" kindref="member">Data</ref>.<ref refid="class_operation_mode_1ae194e6169bbf783a45d8ee6669e75355" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>reduction<sp/>runs<sp/>until<sp/>signal<sp/>to<sp/>switch<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ac0038f40c81db9a3ed16494e5e235b78" kindref="member">Data</ref>.<ref refid="class_data_reduction_1a6f20896263ad8071b7dda6e63732f5a0" kindref="member">Start</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1a535a2dff87cccc0b69864a289215c5af" kindref="member">RunInstrument::Stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>kill<sp/>detached<sp/>threads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stopping<sp/>deatached<sp/>threads...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stopping<sp/>detached<sp/>threads...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1ae6dd88633ba0a431dcc94b49bee3f929" kindref="member">Cam</ref>.<ref refid="class_cam_manager_1ad6f8151290a70d0b00ec7ef331851706" kindref="member">KillCamAcq</ref>();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1a0b7b95feb3cc0bc64ed01315f8140b5a" kindref="member">KillDataBackup</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>all<sp/>subsystems<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adab58484cc0ba6925d2467cd52cfccd33a" kindref="member">LvpsManager::ZYNQ</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5ada2ca008491489967f49ce3900043c7c34" kindref="member">LvpsManager::CAMERAS</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a60707667cfbaeb2e4c9d6cb645a4f11d" kindref="member">Lvps</ref>.<ref refid="class_lvps_manager_1a357d0e541c4dbfe6090a1b0121beb85b" kindref="member">SwitchOff</ref>(<ref refid="class_lvps_manager_1a2bbab5dd2243712f1046d77aac49e5adaefcdddd0eda27894141310148970af6b" kindref="member">LvpsManager::HK</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1abedc1db2ceb04dbaf6743340b4c8ff6b" kindref="member">RunInstrument::Start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>execute-and-exit<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a7e8f543661cd5741d4a1bbe3e24a9030" kindref="member">lvps_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>LvpsSwitch();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a8aebdd0a34c7ba1ab780102425dfa688" kindref="member">check_status</ref>)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>CheckStatus();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>start-up<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>this-&gt;StartUp();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>execute-and-exit<sp/>commands<sp/>which<sp/>require<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1a865ccb1849979316588536a59213f8a5" kindref="member">hvps_switch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>HvpsSwitch();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_run_instrument_1a0861b94434c54888822254fc5826765e" kindref="member">CmdLine</ref>-&gt;<ref refid="struct_cmd_line_inputs_1afbf6dcfc236f225b09beec20228bb17d" kindref="member">debug_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugMode();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>systems<sp/>and<sp/>operational<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>this-&gt;CheckSystems();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_run_instrument_1a477b6d179774caacf6ecaf37ba1059a8" kindref="member">Zynq</ref>.<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref>)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>Zynq<sp/>connection,<sp/>exiting<sp/>the<sp/>program&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>launch<sp/>data<sp/>backup<sp/>in<sp/>background<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_run_instrument_1a710bf775ca4e28e6d1783b73f7ad045a" kindref="member">Usb</ref>.<ref refid="class_usb_manager_1ac2a208aaaa800091a9a32f65ccf59a46" kindref="member">RunDataBackup</ref>();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>launch<sp/>background<sp/>process<sp/>to<sp/>monitor<sp/>the<sp/>instrument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>this-&gt;MonitorInstrument();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>signal<sp/>handling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>signal(SIGINT,<sp/>SignalHandler);<sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enter<sp/>instrument<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!CheckStop())<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_run_instrument_1a24318f1fba2719afdeb5f28f25f37a4c" kindref="member">GetInstMode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NIGHT<sp/>OPERATIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58ac1162ad0374f6fa4fc4104dfef112463" kindref="member">NIGHT</ref>:</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;NightOperations();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DAY<sp/>OPERATIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*----------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58abfae682baa0f084bdc86b5ac59909c2d" kindref="member">DAY</ref>:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;DayOperations();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UNDEFINED<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-----------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_run_instrument_1aaeaa752dfafb76abed003cb5c134ae58a1f73b7c211c8da6c46149f426e10e5bf" kindref="member">INST_UNDEF</ref>:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>instrument<sp/>mode<sp/>undefined,<sp/>cannot<sp/>start<sp/>acquisition&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>switch<sp/>statement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>loop<sp/>when<sp/>stop<sp/>signal<sp/>sent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>program<sp/>shutdown<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="class_run_instrument_1a535a2dff87cccc0b69864a289215c5af" kindref="member">Stop</ref>();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;exiting<sp/>the<sp/>program...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/instrument/RunInstrument.cpp"/>
  </compounddef>
</doxygen>
