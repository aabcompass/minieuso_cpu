<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_data_acquisition_8cpp" kind="file" language="C++">
    <compoundname>DataAcquisition.cpp</compoundname>
    <includes refid="_data_acquisition_8h" local="yes">DataAcquisition.h</includes>
    <incdepgraph>
      <node id="315">
        <label>netinet/in.h</label>
      </node>
      <node id="317">
        <label>arpa/inet.h</label>
      </node>
      <node id="297">
        <label>iomanip</label>
      </node>
      <node id="329">
        <label>error.h</label>
      </node>
      <node id="289">
        <label>dm75xx_library.h</label>
      </node>
      <node id="310">
        <label>ZynqManager.h</label>
        <link refid="_zynq_manager_8h"/>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>stdint.h</label>
      </node>
      <node id="323">
        <label>stdlib.h</label>
      </node>
      <node id="326">
        <label>LvpsManager.h</label>
        <link refid="_lvps_manager_8h"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>ConfigManager.h</label>
        <link refid="_config_manager_8h"/>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
      </node>
      <node id="327">
        <label>errno.h</label>
      </node>
      <node id="306">
        <label>stdexcept</label>
      </node>
      <node id="318">
        <label>fcntl.h</label>
      </node>
      <node id="281">
        <label>src/operations/DataAcquisition.cpp</label>
        <link refid="_data_acquisition_8cpp"/>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="300">
        <label>pdmdata.h</label>
        <link refid="pdmdata_8h"/>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>string</label>
      </node>
      <node id="303">
        <label>regex</label>
      </node>
      <node id="294">
        <label>fstream</label>
      </node>
      <node id="316">
        <label>netdb.h</label>
      </node>
      <node id="304">
        <label>CpuTools.h</label>
        <link refid="_cpu_tools_8h"/>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>DataAcquisition.h</label>
        <link refid="_data_acquisition_8h"/>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="330">
        <label>aDIO_library.h</label>
      </node>
      <node id="287">
        <label>condition_variable</label>
      </node>
      <node id="314">
        <label>sys/types.h</label>
      </node>
      <node id="312">
        <label>string.h</label>
      </node>
      <node id="305">
        <label>cstdio</label>
      </node>
      <node id="321">
        <label>boost/crc.hpp</label>
      </node>
      <node id="291">
        <label>unistd.h</label>
      </node>
      <node id="299">
        <label>vector</label>
      </node>
      <node id="325">
        <label>InputParser.h</label>
        <link refid="_input_parser_8h"/>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="308">
        <label>array</label>
      </node>
      <node id="295">
        <label>sstream</label>
      </node>
      <node id="298">
        <label>data_format.h</label>
        <link refid="data__format_8h"/>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>log.h</label>
        <link refid="log_8h"/>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>sys/time.h</label>
      </node>
      <node id="296">
        <label>iostream</label>
      </node>
      <node id="311">
        <label>strings.h</label>
      </node>
      <node id="328">
        <label>ctype.h</label>
      </node>
      <node id="285">
        <label>OperationMode.h</label>
        <link refid="_operation_mode_8h"/>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="286">
        <label>mutex</label>
      </node>
      <node id="313">
        <label>sys/socket.h</label>
      </node>
      <node id="284">
        <label>thread</label>
      </node>
      <node id="283">
        <label>sys/inotify.h</label>
      </node>
      <node id="319">
        <label>algorithm</label>
      </node>
      <node id="302">
        <label>ThermManager.h</label>
        <link refid="_therm_manager_8h"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>stdio.h</label>
      </node>
      <node id="320">
        <label>SynchronisedFile.h</label>
        <link refid="_synchronised_file_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>AnalogManager.h</label>
        <link refid="_analog_manager_8h"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>memory</label>
      </node>
      <node id="309">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_data_acquisition_8h" kindref="compound">DataAcquisition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="class_data_acquisition_1a219a57019cb7f899040d2d852790b0cf" kindref="member">DataAcquisition::DataAcquisition</ref>()<sp/>{<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>filename<sp/>initialisation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1a4d03a22366d17e58d50c8e191b884235" kindref="member">cpu_main_file_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1af29f7044d5d81a1d24055be285845a41" kindref="member">cpu_sc_file_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1affe81aa950d46b625c2479b0dd9bfb45" kindref="member">cpu_hv_file_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1abb672ec183e304bca94c944de0857e60" kindref="member">usb_num_storage_dev</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>create<sp/>cpu<sp/>run<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">std::string<sp/>DataAcquisition::CreateCpuRunName(RunType<sp/>run_type,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cpu_file_name[80];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>std::string<sp/>done_str(<ref refid="_run_instrument_8h_1ac2bc8f847b897d9c7b3f866d5eb3b393" kindref="member">DONE_DIR</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::string<sp/>usb_str(<ref refid="_data_acquisition_8h_1a118e1e5950681c5a19ae6ccdd0315611" kindref="member">USB_MOUNTPOINT_0</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>std::string<sp/>time_str;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(run_type)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>time_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/CPU_RUN_MAIN__%Y_%m_%d__%H_%M_%S.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da8171d535bc60ceeabc4f07a40b102b62" kindref="member">SC</ref>:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>time_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/CPU_RUN_SC__%Y_%m_%d__%H_%M_%S__&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(ConfigOut-&gt;<ref refid="struct_config_1a866159dee6f5dc32675163e11388da49" kindref="member">dynode_voltage</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>time_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/CPU_RUN_HV__%Y_%m_%d__%H_%M_%S.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>std::string<sp/>cpu_str;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>on<sp/>USB<sp/>directly<sp/>if<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_data_acquisition_1abb672ec183e304bca94c944de0857e60" kindref="member">usb_num_storage_dev</ref><sp/>==<sp/>1<sp/>||<sp/><ref refid="class_data_acquisition_1abb672ec183e304bca94c944de0857e60" kindref="member">usb_num_storage_dev</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_str<sp/>=<sp/>usb_str<sp/>+<sp/>time_str;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>else<sp/>write<sp/>in<sp/>DONE_DIR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_str<sp/>=<sp/>done_str<sp/>+<sp/>time_str;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kCpuCh<sp/>=<sp/>cpu_str.c_str();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>gettimeofday(&amp;tv<sp/>,0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>time_t<sp/>now<sp/>=<sp/>tv.tv_sec;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>now_tm<sp/>=<sp/>localtime(&amp;now);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>strftime(cpu_file_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cpu_file_name),<sp/>kCpuCh,<sp/>now_tm);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_file_name;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>build<sp/>the<sp/>cpu<sp/>file<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">uint32_t<sp/>DataAcquisition::BuildCpuFileHeader(uint32_t<sp/>type,<sp/>uint32_t<sp/>ver)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint32_t<sp/>header;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>header<sp/>=<sp/><sp/>((</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">&lt;&lt;24)<sp/>|<sp/>(<ref refid="data__format_8h_1a9812203ec1b709701a9c37c6ec290164" kindref="member">INSTRUMENT_ME_PDM</ref>&lt;&lt;16)<sp/>|<sp/>((type)&lt;&lt;8)<sp/>|<sp/>(ver));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>build<sp/>the<sp/>cpu<sp/>packet<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">uint32_t<sp/>DataAcquisition::BuildCpuPktHeader(uint32_t<sp/>type,<sp/>uint32_t<sp/>ver)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>uint32_t<sp/>header;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>header<sp/>=<sp/><sp/>((</highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">&lt;&lt;24)<sp/>|<sp/>(<ref refid="data__format_8h_1a9812203ec1b709701a9c37c6ec290164" kindref="member">INSTRUMENT_ME_PDM</ref>&lt;&lt;16)<sp/>|<sp/>((type)&lt;&lt;8)<sp/>|<sp/>(ver));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>build<sp/>the<sp/>cpu<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">uint32_t<sp/>DataAcquisition::BuildCpuTimeStamp()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint32_t<sp/>timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timestamp;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>make<sp/>a<sp/>cpu<sp/>data<sp/>file<sp/>for<sp/>a<sp/>new<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1af6a5c877aa07e62c5a7d554969804805" kindref="member">DataAcquisition::CreateCpuRun</ref>(RunType<sp/>run_type,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="struct_cpu_file_header" kindref="compound">CpuFileHeader</ref><sp/>*<sp/>cpu_file_header<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_cpu_file_header" kindref="compound">CpuFileHeader</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>cpu<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(run_type)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>:<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1a4d03a22366d17e58d50c8e191b884235" kindref="member">cpu_main_file_name</ref><sp/>=<sp/>CreateCpuRunName(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>cpu_main_file_name<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_data_acquisition_1a4d03a22366d17e58d50c8e191b884235" kindref="member">cpu_main_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref><sp/>=<sp/>std::make_shared&lt;SynchronisedFile&gt;(this-&gt;<ref refid="class_data_acquisition_1a4d03a22366d17e58d50c8e191b884235" kindref="member">cpu_main_file_name</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da8171d535bc60ceeabc4f07a40b102b62" kindref="member">SC</ref>:<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1af29f7044d5d81a1d24055be285845a41" kindref="member">cpu_sc_file_name</ref><sp/>=<sp/>CreateCpuRunName(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da8171d535bc60ceeabc4f07a40b102b62" kindref="member">SC</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>cpu_sc_file_name<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_data_acquisition_1af29f7044d5d81a1d24055be285845a41" kindref="member">cpu_sc_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref><sp/>=<sp/>std::make_shared&lt;SynchronisedFile&gt;(this-&gt;<ref refid="class_data_acquisition_1af29f7044d5d81a1d24055be285845a41" kindref="member">cpu_sc_file_name</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1affe81aa950d46b625c2479b0dd9bfb45" kindref="member">cpu_hv_file_name</ref><sp/>=<sp/>CreateCpuRunName(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>cpu_hv_file_name<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_data_acquisition_1affe81aa950d46b625c2479b0dd9bfb45" kindref="member">cpu_hv_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref><sp/>=<sp/>std::make_shared&lt;SynchronisedFile&gt;(this-&gt;<ref refid="class_data_acquisition_1affe81aa950d46b625c2479b0dd9bfb45" kindref="member">cpu_hv_file_name</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_access" kindref="compound">Access</ref>(this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>access<sp/>for<sp/>ThermManager<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>-&gt;<ref refid="class_therm_manager_1abc781a3c326f8f2ba4496ab7caf05d34" kindref="member">RunAccess</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_access" kindref="compound">Access</ref>(this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>cpu<sp/>file<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>cpu_file_header-&gt;<ref refid="struct_cpu_file_header_1a78b9309409fe5f648f33f414d2fb5153" kindref="member">header</ref><sp/>=<sp/>BuildCpuFileHeader(<ref refid="data__format_8h_1a9811800f1d13462cc4dcf988f6c41b62" kindref="member">CPU_FILE_TYPE</ref>,<sp/><ref refid="data__format_8h_1ad6f14c6d0ff18a713718fcf6caef81da" kindref="member">CPU_FILE_VER</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>cpu_file_header-&gt;<ref refid="struct_cpu_file_header_1a59f4b6f328f5d0d71b28786bc27d08eb" kindref="member">run_size</ref><sp/>=<sp/><ref refid="data__format_8h_1a372b7134e3444bf0ea2a2c3384f86d6f" kindref="member">RUN_SIZE</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>to<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_cpu_file_header" kindref="compound">CpuFileHeader</ref><sp/>*&gt;(cpu_file_header,<sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cpu_file_header;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>notify<sp/>the<sp/>ThermManager<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>will<sp/>this<sp/>only<sp/>work<sp/>the<sp/>first<sp/>time?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>-&gt;<ref refid="class_therm_manager_1a397e05cdfa3fd1241c4b45735b368fb1" kindref="member">cpu_file_is_set</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>-&gt;<ref refid="class_therm_manager_1aae3e4ef31df368f130815733c924ffab" kindref="member">cond_var</ref>.notify_all();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>CPU<sp/>file<sp/>run<sp/>and<sp/>append<sp/>CRC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">DataAcquisition::CloseCpuRun</ref>(RunType<sp/>run_type)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="struct_cpu_file_trailer" kindref="compound">CpuFileTrailer</ref><sp/>*<sp/>cpu_file_trailer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_cpu_file_trailer" kindref="compound">CpuFileTrailer</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;closing<sp/>the<sp/>cpu<sp/>run<sp/>file<sp/>called<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_data_acquisition_1a2cff57118c2529ee0ba537eeae3e1114" kindref="member">CpuFile</ref>-&gt;path<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>cpu<sp/>file<sp/>trailer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>cpu_file_trailer-&gt;<ref refid="struct_cpu_file_trailer_1a736a61cbbd52ce41d2eec9b7bb638dad" kindref="member">run_size</ref><sp/>=<sp/><ref refid="data__format_8h_1a372b7134e3444bf0ea2a2c3384f86d6f" kindref="member">RUN_SIZE</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>cpu_file_trailer-&gt;<ref refid="struct_cpu_file_trailer_1a26f3adebfa390d51e8ed9b5dcf1d1dab" kindref="member">crc</ref><sp/>=<sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1a52e689eb4ba9cca3405ea698ed4d3a6c" kindref="member">GetChecksum</ref>();<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>to<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_cpu_file_trailer" kindref="compound">CpuFileTrailer</ref><sp/>*&gt;(cpu_file_trailer,<sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cpu_file_trailer;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>current<sp/>SynchronisedFile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1ae37eec3b3f9ca44abf2d0ebbea87715b" kindref="member">CloseSynchFile</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>an<sp/>scurve<sp/>file<sp/>into<sp/>an<sp/>scurve<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref><sp/>*<sp/>DataAcquisition::ScPktReadOut(std::string<sp/>sc_file_name,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>ptr_scfile;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref><sp/>*<sp/>sc_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kScFileName<sp/>=<sp/>sc_file_name.c_str();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>out<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sc_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>ptr_scfile<sp/>=<sp/>fopen(kScFileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr_scfile)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sc_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>the<sp/>scurve<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a436e4427d8237437f32c840f0afe76b3" kindref="member">sc_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1a63b706a8d330d8f64474ab2bd9d7b2f3" kindref="member">header</ref><sp/>=<sp/>BuildCpuPktHeader(<ref refid="data__format_8h_1af62343366608e1404424a2339c0074d7" kindref="member">SC_PACKET_TYPE</ref>,<sp/><ref refid="data__format_8h_1a40604353efe853e9be67af040d9ad488" kindref="member">SC_PACKET_VER</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a436e4427d8237437f32c840f0afe76b3" kindref="member">sc_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1ae654e77a6daad283c09b48296db7d52a" kindref="member">pkt_size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1aa422aa7d319f65fe8aac69c57ac59948" kindref="member">sc_time</ref>.<ref refid="struct_cpu_time_stamp_1aa53397518aae3e159255455789abcb41" kindref="member">cpu_time_stamp</ref><sp/>=<sp/>BuildCpuTimeStamp();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1aabf5329cf4eb14c61b68e8706ea1a425" kindref="member">sc_start</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a89ff46c885f7c94eef95a92edc0c4918" kindref="member">scurve_start</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a4ef730ab4d0c569ff98a91ac3bb451a3" kindref="member">sc_step</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a42ddc101bf12c3af19223a4911f5e2dd" kindref="member">scurve_step</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a43b86308da45ebf8d6cb1af12e8c98a4" kindref="member">sc_stop</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a3a5e4bdbceefb070ab68e9eea77b79ca" kindref="member">scurve_stop</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a581df163d99d90c24d6eadb18b1dcad6" kindref="member">sc_acc</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a74a9b2aeef9bb431ba6ab05c93e98074" kindref="member">scurve_acc</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>ptr_scfile<sp/>=<sp/>fopen(kScFileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr_scfile)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sc_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>scurve<sp/>data<sp/>from<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>check<sp/>=<sp/>fread(&amp;sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a412f3c89034b25ed7d96d72b74dd4e23" kindref="member">sc_data</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sc_packet-&gt;<ref refid="struct_s_c___p_a_c_k_e_t_1a412f3c89034b25ed7d96d72b74dd4e23" kindref="member">sc_data</ref>),<sp/>1,<sp/>ptr_scfile);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fread<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sc_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>scurve<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>fclose(ptr_scfile);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc_packet;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>a<sp/>hv<sp/>file<sp/>into<sp/>an<sp/>hv<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*<sp/>DataAcquisition::HvPktReadOut(std::string<sp/>hv_file_name)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>ptr_hvfile;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*<sp/>hv_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kHvFileName<sp/>=<sp/>hv_file_name.c_str();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>out<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hv_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ptr_hvfile<sp/>=<sp/>fopen(kHvFileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr_hvfile)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hv_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>the<sp/>scurve<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>hv_packet-&gt;<ref refid="struct_h_v___p_a_c_k_e_t_1a972f58d1676880a0e45dd51d8640c36a" kindref="member">hv_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1a63b706a8d330d8f64474ab2bd9d7b2f3" kindref="member">header</ref><sp/>=<sp/>BuildCpuPktHeader(<ref refid="data__format_8h_1ae4fc9d9d9c021827f57e2333c5d0659d" kindref="member">HV_PACKET_TYPE</ref>,<sp/><ref refid="data__format_8h_1abcd83a20b54f5fd865d06dac95fbd36f" kindref="member">HV_PACKET_VER</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>hv_packet-&gt;<ref refid="struct_h_v___p_a_c_k_e_t_1a972f58d1676880a0e45dd51d8640c36a" kindref="member">hv_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1ae654e77a6daad283c09b48296db7d52a" kindref="member">pkt_size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>hv_packet-&gt;<ref refid="struct_h_v___p_a_c_k_e_t_1a5bfa0cd12c717380ce180f148999adf2" kindref="member">hv_time</ref>.<ref refid="struct_cpu_time_stamp_1aa53397518aae3e159255455789abcb41" kindref="member">cpu_time_stamp</ref><sp/>=<sp/>BuildCpuTimeStamp();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ptr_hvfile<sp/>=<sp/>fopen(kHvFileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr_hvfile)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hv_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>scurve<sp/>data<sp/>from<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>check<sp/>=<sp/>fread(&amp;hv_packet-&gt;<ref refid="struct_h_v___p_a_c_k_e_t_1a2e4ef0b1b311182ca8779e3bd4b08e1f" kindref="member">hvps_log</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hv_packet-&gt;<ref refid="struct_h_v___p_a_c_k_e_t_1a2e4ef0b1b311182ca8779e3bd4b08e1f" kindref="member">hvps_log</ref>),<sp/>1,<sp/>ptr_hvfile);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fread<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>hv_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>hv<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>fclose(ptr_hvfile);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hv_packet;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>a<sp/>zynq<sp/>data<sp/>file<sp/>into<sp/>a<sp/>zynq<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>DataAcquisition::ZynqPktReadOut(std::string<sp/>zynq_file_name,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>ptr_zfile;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>zynq_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref><sp/>*<sp/>zynq_d1_packet_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref><sp/>*<sp/>zynq_d2_packet_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kZynqFileName<sp/>=<sp/>zynq_file_name.c_str();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>check;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>out<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>ptr_zfile<sp/>=<sp/>fopen(kZynqFileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr_zfile)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/>fseek(ptr_zfile,<sp/>0L,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/>fsize<sp/>=<sp/>ftell(ptr_zfile);</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/>rewind(ptr_zfile);</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;file<sp/>size:<sp/>&quot;<sp/>&lt;&lt;<sp/>fsize<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;sizeof(*zynq_packet):<sp/>&quot;<sp/>&lt;&lt;<sp/>sizeof(*zynq_packet)<sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;zynq<sp/>file<sp/>name:<sp/>&quot;<sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ptr_zfile:<sp/>&quot;<sp/>&lt;&lt;<sp/>ptr_zfile<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;zynq_packet:<sp/>&quot;<sp/>&lt;&lt;<sp/>zynq_packet<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>number<sp/>of<sp/>N1<sp/>and<sp/>N2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a6928574559db9f8737d0a123d54df876" kindref="member">N1</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a9d77f19e94f4e0e1f6d5dc02273ca2e6" kindref="member">N2</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>a<sp/>number<sp/>of<sp/>Zynq<sp/>packets,<sp/>depending<sp/>on<sp/>ConfigOut-&gt;N1<sp/>and<sp/>ConfigOut-&gt;N2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>level<sp/>D1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ConfigOut-&gt;<ref refid="struct_config_1a6928574559db9f8737d0a123d54df876" kindref="member">N1</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>check<sp/>=<sp/>fread(zynq_d1_packet_holder,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*zynq_d1_packet_holder),<sp/>1,<sp/>ptr_zfile);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fread<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>.push_back(*zynq_d1_packet_holder);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>.shrink_to_fit();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>level<sp/>D2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ConfigOut-&gt;<ref refid="struct_config_1a9d77f19e94f4e0e1f6d5dc02273ca2e6" kindref="member">N2</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>check<sp/>=<sp/>fread(zynq_d2_packet_holder,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*zynq_d2_packet_holder),<sp/>1,<sp/>ptr_zfile);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fread<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>.push_back(*zynq_d2_packet_holder);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>.shrink_to_fit();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>level<sp/>D3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>check<sp/>=<sp/>fread(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>),<sp/>1,<sp/>ptr_zfile);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fread<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_file_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>failed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DEBUG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Check:<sp/>&quot;<sp/>&lt;&lt;<sp/>check<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;feof:<sp/>&quot;<sp/>&lt;&lt;<sp/>feof(ptr_zfile)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;ferror:<sp/>&quot;<sp/>&lt;&lt;<sp/>ferror(ptr_zfile)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;header<sp/>D1<sp/>P0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>zynq_packet-&gt;level1_data[0].zbh.header<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;payload_size<sp/>D1<sp/>P0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>zynq_packet-&gt;level1_data[0].zbh.payload_size<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;n_gtu<sp/>D1<sp/>P0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>zynq_packet-&gt;level1_data[0].payload.ts.n_gtu<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>zynq<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>fclose(ptr_zfile);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zynq_packet;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>a<sp/>hk<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref><sp/>*<sp/>DataAcquisition::AnalogPktReadOut()<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref><sp/>*<sp/>hk_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>collect<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>light_level<sp/>=<sp/>this-&gt;<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>-&gt;<ref refid="class_analog_manager_1af2606ea4f43b699304e12c509c661e89" kindref="member">ReadLightLevel</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>header<sp/>of<sp/>the<sp/>hk<sp/>packet<sp/>and<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1a9530cef04346ba3f2f5463335c754109" kindref="member">hk_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1a63b706a8d330d8f64474ab2bd9d7b2f3" kindref="member">header</ref><sp/>=<sp/>BuildCpuPktHeader(<ref refid="data__format_8h_1a5bbfb5ea0cfb642594cced6d4187d0e9" kindref="member">HK_PACKET_TYPE</ref>,<sp/><ref refid="data__format_8h_1a74be6cfc4aa246db007ed071142c4b04" kindref="member">HK_PACKET_VER</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1a9530cef04346ba3f2f5463335c754109" kindref="member">hk_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1ae654e77a6daad283c09b48296db7d52a" kindref="member">pkt_size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hk_packet);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1ad846026661a93daaa9a52b8a5c9e71c5" kindref="member">hk_time</ref>.<ref refid="struct_cpu_time_stamp_1aa53397518aae3e159255455789abcb41" kindref="member">cpu_time_stamp</ref><sp/>=<sp/>BuildCpuTimeStamp();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="data__format_8h_1ac21585feb5b0c4d0db27d27edffbdd3a" kindref="member">N_CHANNELS_PHOTODIODE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1a5ff5f449b077701216738752eacb0f09" kindref="member">photodiode_data</ref>[i]<sp/>=<sp/>light_level-&gt;photodiode_data[i];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="data__format_8h_1ae3d059c4bf8bdd664a21c81ac911af3d" kindref="member">N_CHANNELS_SIPM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1ac838724962de25b788628f19f5e301e3" kindref="member">sipm_data</ref>[j]<sp/>=<sp/>light_level-&gt;sipm_data[j];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1a52530e27c4abe5de04c9b7f69bd998ea" kindref="member">sipm_single</ref><sp/>=<sp/>light_level-&gt;sipm_single;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hk_packet;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>cpu<sp/>packet<sp/>to<sp/>the<sp/>cpu<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataAcquisition::WriteCpuPkt(<ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>zynq_packet,<sp/><ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref><sp/>*<sp/>hk_packet,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="struct_c_p_u___p_a_c_k_e_t" kindref="compound">CPU_PACKET</ref><sp/>*<sp/>cpu_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_p_u___p_a_c_k_e_t" kindref="compound">CPU_PACKET</ref>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pkt_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>new<sp/>packet<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_data_acquisition_1a4d03a22366d17e58d50c8e191b884235" kindref="member">cpu_main_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>cpu<sp/>packet<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a984a420cab69b54fc63410a405a06020" kindref="member">cpu_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1a63b706a8d330d8f64474ab2bd9d7b2f3" kindref="member">header</ref><sp/>=<sp/>BuildCpuPktHeader(<ref refid="data__format_8h_1a5d9bfe9fceb2ea2f539cca08f1278806" kindref="member">CPU_PACKET_TYPE</ref>,<sp/><ref refid="data__format_8h_1ae9583d029771fd1a1215f7fe1b9aba29" kindref="member">CPU_PACKET_VER</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a984a420cab69b54fc63410a405a06020" kindref="member">cpu_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1ae654e77a6daad283c09b48296db7d52a" kindref="member">pkt_size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*cpu_packet);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a984a420cab69b54fc63410a405a06020" kindref="member">cpu_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1af6d7f540f11ef7693959452a241e1cb2" kindref="member">pkt_num</ref><sp/>=<sp/>pkt_counter;<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a92b40b2a7c75f7b9265adb5043b1c053" kindref="member">cpu_time</ref>.<ref refid="struct_cpu_time_stamp_1aa53397518aae3e159255455789abcb41" kindref="member">cpu_time_stamp</ref><sp/>=<sp/>BuildCpuTimeStamp();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>hk_packet-&gt;<ref refid="struct_h_k___p_a_c_k_e_t_1a9530cef04346ba3f2f5463335c754109" kindref="member">hk_packet_header</ref>.<ref refid="struct_cpu_pkt_header_1af6d7f540f11ef7693959452a241e1cb2" kindref="member">pkt_num</ref><sp/>=<sp/>pkt_counter;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>the<sp/>zynq<sp/>and<sp/>hk<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref><sp/>=<sp/>*<sp/>zynq_packet;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zynq_packet;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hk_packet<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a346d6fe6a3dc54fe90caa95dd5561c79" kindref="member">hk_packet</ref><sp/>=<sp/>*<sp/>hk_packet;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hk_packet;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>CPU<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//this-&gt;RunAccess-&gt;WriteToSynchFile&lt;CPU_PACKET<sp/>*&gt;(cpu_packet,<sp/>SynchronisedFile::VARIABLE,<sp/>ConfigOut);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_cpu_pkt_header" kindref="compound">CpuPktHeader</ref><sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a984a420cab69b54fc63410a405a06020" kindref="member">cpu_packet_header</ref>,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_cpu_time_stamp" kindref="compound">CpuTimeStamp</ref><sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a92b40b2a7c75f7b9265adb5043b1c053" kindref="member">cpu_time</ref>,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>hk<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref><sp/>*&gt;<sp/>(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a346d6fe6a3dc54fe90caa95dd5561c79" kindref="member">hk_packet</ref>,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>zynq<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;uint8_t<sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref>.<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref>,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;uint8_t<sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref>.<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref>,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref><sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref>.<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>[0],</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03a286fb0e2705e0ec8262191f44ab601d1" kindref="member">SynchronisedFile::VARIABLE_D1</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref><sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref>.<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>[0],</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03a767f555e5b37bb847b7e4b896f53f0d2" kindref="member">SynchronisedFile::VARIABLE_D2</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2" kindref="compound">Z_DATA_TYPE_SCI_L3_V2</ref><sp/>*&gt;(&amp;cpu_packet-&gt;<ref refid="struct_c_p_u___p_a_c_k_e_t_1a52e47702814b90e73aa036329d47e084" kindref="member">zynq_packet</ref>.<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cpu_packet;<sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>pkt_counter++;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>sc<sp/>packet<sp/>to<sp/>the<sp/>cpu<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataAcquisition::WriteScPkt(<ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref><sp/>*<sp/>sc_packet)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pkt_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>new<sp/>packet<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_data_acquisition_1af29f7044d5d81a1d24055be285845a41" kindref="member">cpu_sc_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>SC<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref><sp/>*&gt;(sc_packet,<sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>sc_packet;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>pkt_counter++;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>hv<sp/>packet<sp/>to<sp/>the<sp/>cpu<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataAcquisition::WriteHvPkt(<ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*<sp/>hv_packet)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pkt_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;writing<sp/>new<sp/>packet<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_data_acquisition_1affe81aa950d46b625c2479b0dd9bfb45" kindref="member">cpu_hv_file_name</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>HV<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aba26642e86289cae1600e151d7c36069" kindref="member">RunAccess</ref>-&gt;<ref refid="class_access_1aded6a66f29109e43c80cd0aaade56709" kindref="member">WriteToSynchFile</ref>&lt;<ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*&gt;(hv_packet,<sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>hv_packet;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>pkt_counter++;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>new<sp/>files<sp/>in<sp/>the<sp/>data<sp/>directory<sp/>and<sp/>process<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataAcquisition::ProcessIncomingData(<ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut,<sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/>CmdLine)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>wd;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="_data_acquisition_8h_1a8b5839f71a3b6e7d64b2d5e9967e3dd1" kindref="member">BUF_LEN</ref>];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>std::string<sp/>zynq_file_name;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>std::string<sp/>sc_file_name;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>std::string<sp/>hv_file_name;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::string<sp/>data_str(<ref refid="_run_instrument_8h_1a48cc0a91e8f54c62f3341c21c8cc74e8" kindref="member">DATA_DIR</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>std::string<sp/>event_name;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>background<sp/>process<sp/>of<sp/>processing<sp/>incoming<sp/>data&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>watch<sp/>the<sp/>data<sp/>directory<sp/>for<sp/>incoming<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>fd<sp/>=<sp/>inotify_init();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>start<sp/>inotify<sp/>service&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;start<sp/>watching<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_run_instrument_8h_1ac2bc8f847b897d9c7b3f866d5eb3b393" kindref="member">DONE_DIR</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>wd<sp/>=<sp/>inotify_add_watch(fd,<sp/><ref refid="_run_instrument_8h_1a48cc0a91e8f54c62f3341c21c8cc74e8" kindref="member">DATA_DIR</ref>,<sp/>IN_CREATE);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>good<sp/>and<sp/>bad<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packet_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bad_packet_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>read<sp/>out<sp/>previous<sp/>packet<sp/>but<sp/>not<sp/>skip<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frm_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_loop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>handling<sp/>the<sp/>zynq<sp/>file<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>std::string<sp/>zynq_filename_stem<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;frm_cc_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>std::string<sp/>zynq_filename_end<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.dat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initilaise<sp/>timeout<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>time_t<sp/>start<sp/>=<sp/>time(0);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_left<sp/>=<sp/><ref refid="_data_acquisition_8h_1a565365cdb3727cc89a747691b31f21cf" kindref="member">FTP_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(this-&gt;<ref refid="class_operation_mode_1a191135ef67e176c036296fbcdf443c73" kindref="member">_m_switch</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enter<sp/>loop<sp/>while<sp/>instrument<sp/>mode<sp/>switching<sp/>not<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!this-&gt;<ref refid="class_operation_mode_1abfdfc50fff9045cc980be2c486936f21" kindref="member">_cv_switch</ref>.wait_for(lock,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::milliseconds(<ref refid="_data_reduction_8h_1ae7eeb45aceab0e4a2867080b5c9dc68f" kindref="member">WAIT_PERIOD</ref>),</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>{<sp/>return<sp/>this-&gt;_switch;<sp/>})<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(time_left<sp/>&gt;<sp/>0<sp/>||<sp/>!first_loop)<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>if<sp/>no<sp/>activity<sp/>after<sp/>FTP_TIMEOUT<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>(time_left<sp/>&gt;<sp/>0<sp/>||<sp/>!first_loop<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>end<sp/>=<sp/>time(0);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>time_taken<sp/>=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>time_left<sp/>=<sp/><ref refid="_data_acquisition_8h_1a565365cdb3727cc89a747691b31f21cf" kindref="member">FTP_TIMEOUT</ref><sp/>-<sp/>time_taken;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inotify_event<sp/>*<sp/>event;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>read(fd,<sp/>buffer,<sp/><ref refid="_data_acquisition_8h_1a8b5839f71a3b6e7d64b2d5e9967e3dd1" kindref="member">BUF_LEN</ref>);<sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>read<sp/>from<sp/>inotify<sp/>file<sp/>descriptor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inotify_event<sp/>*)<sp/>&amp;buffer[i];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;len)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;mask<sp/>&amp;<sp/>IN_CREATE)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;mask<sp/>&amp;<sp/>IN_ISDIR)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>new<sp/>directory<sp/>creation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>directory<sp/>%s<sp/>was<sp/>created\n&quot;</highlight><highlight class="normal">,<sp/>event-&gt;name);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>directory<sp/>created&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>new<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;new<sp/>file<sp/>created<sp/>with<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;name<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_name<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;name;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>files<sp/>from<sp/>Zynq<sp/>(frm_cc_XXXXXXXX.dat)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_name.compare(0,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;frm&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>run<sp/>file<sp/>every<sp/>RUN_SIZE<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_counter<sp/>==<sp/><ref refid="data__format_8h_1a372b7134e3444bf0ea2a2c3384f86d6f" kindref="member">RUN_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">CloseCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>packet<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PACKET<sp/>COUNTER<sp/>is<sp/>reset<sp/>to<sp/>0&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_counter<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>new<sp/>run<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1af6a5c877aa07e62c5a7d554969804805" kindref="member">CreateCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_loop)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>number<sp/>of<sp/>frm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm_num<sp/>=<sp/>std::stoi(event_name.substr(7,<sp/>14));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm_num++;<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_loop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>previous<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>frm_num_str<sp/>=<sp/><ref refid="class_cpu_tools_1a5241a00ab528d860153bb891d3c908c9" kindref="member">CpuTools::IntToFixedLenStr</ref>(frm_num<sp/>-<sp/>1,<sp/>8);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zynq_file_name<sp/>=<sp/>data_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>zynq_filename_stem<sp/>+<sp/>frm_num_str<sp/>+<sp/>zynq_filename_end;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(2);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>sub<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>zynq_packet<sp/>=<sp/>ZynqPktReadOut(zynq_file_name,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_h_k___p_a_c_k_e_t" kindref="compound">HK_PACKET</ref><sp/>*<sp/>hk_packet<sp/>=<sp/>AnalogPktReadOut();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>NULL<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((zynq_packet<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>hk_packet<sp/>!=<sp/>NULL)<sp/>||<sp/>packet_counter<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>cpu<sp/>packet<sp/>and<sp/>append<sp/>to<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteCpuPkt(zynq_packet,<sp/>hk_packet,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>upon<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CmdLine-&gt;<ref refid="struct_cmd_line_inputs_1ad050b3e333d5414fef2848ba2408e1d1" kindref="member">keep_zynq_pkt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove(zynq_file_name.c_str());</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>update<sp/>to<sp/>screen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PACKET<sp/>COUNTER<sp/>=<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>packet_counter);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;The<sp/>packet<sp/>%s<sp/>was<sp/>read<sp/>out\n&quot;</highlight><highlight class="normal">,<sp/>zynq_file_name.c_str());</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>increment<sp/>the<sp/>packet<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packet_counter++;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm_num++;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>leave<sp/>loop<sp/>for<sp/>a<sp/>single<sp/>run<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet_counter<sp/>==<sp/><ref refid="data__format_8h_1a372b7134e3444bf0ea2a2c3384f86d6f" kindref="member">RUN_SIZE</ref><sp/>&amp;&amp;<sp/>CmdLine-&gt;<ref refid="struct_cmd_line_inputs_1ab32a29de930637b7a172d507b9c3c8a3" kindref="member">single_run</ref>)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>NULL<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>this<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad_packet_counter++;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frm_num++;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>FRM<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>S-curve<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_name.compare(0,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;sc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_loop)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_loop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc_file_name<sp/>=<sp/>data_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;name;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(27);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1af6a5c877aa07e62c5a7d554969804805" kindref="member">CreateCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da8171d535bc60ceeabc4f07a40b102b62" kindref="member">SC</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>sc<sp/>packet<sp/>and<sp/>append<sp/>to<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_c___p_a_c_k_e_t" kindref="compound">SC_PACKET</ref><sp/>*<sp/>sc_packet<sp/>=<sp/>ScPktReadOut(sc_file_name,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteScPkt(sc_packet);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">CloseCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da8171d535bc60ceeabc4f07a40b102b62" kindref="member">SC</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>upon<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove(sc_file_name.c_str());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>without<sp/>waiting<sp/>for<sp/>more<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>SC<sp/>packets<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>HV<sp/>files<sp/>from<sp/>Zynq<sp/>(hv_XXXXXXXX.dat)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_name.compare(0,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;hv&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_loop)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_loop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hv_file_name<sp/>=<sp/>data_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;name;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1af6a5c877aa07e62c5a7d554969804805" kindref="member">CreateCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>hv<sp/>packet<sp/>to<sp/>append<sp/>to<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*<sp/>hv_packet<sp/>=<sp/>HvPktReadOut(hv_file_name);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteHvPkt(hv_packet);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">CloseCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>upon<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove(hv_file_name.c_str());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wrote<sp/>HV<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>without<sp/>waiting<sp/>for<sp/>more<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>HV<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>packet<sp/>doesn&apos;t<sp/>match<sp/>any<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>and<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>no<sp/>matching<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>event<sp/>mode<sp/>is<sp/>CREATE<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>event-&gt;len<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>while<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>watching<sp/>the<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>inotify_rm_watch(fd,<sp/>wd);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>__APPLE__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>HV<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataAcquisition::GetHvInfo(<ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut)<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>std::string<sp/>data_str(<ref refid="_run_instrument_8h_1a48cc0a91e8f54c62f3341c21c8cc74e8" kindref="member">DATA_DIR</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>DIR<sp/>*<sp/>dir;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*<sp/>ent;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir<sp/>=<sp/>opendir<sp/>(data_str.c_str()))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>all<sp/>files<sp/>within<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ent<sp/>=<sp/>readdir<sp/>(dir))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fname(ent-&gt;d_name);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fname.compare(0,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;hv&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>the<sp/>HV<sp/>file,<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>hv_file_name<sp/>=<sp/>data_str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>fname;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1af6a5c877aa07e62c5a7d554969804805" kindref="member">CreateCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generate<sp/>hv<sp/>packet<sp/>to<sp/>append<sp/>to<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_v___p_a_c_k_e_t" kindref="compound">HV_PACKET</ref><sp/>*<sp/>hv_packet<sp/>=<sp/>HvPktReadOut(hv_file_name);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>WriteHvPkt(hv_packet);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">CloseCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20da5a3f69a5b5c269eba232211210be1a2b" kindref="member">HV</ref>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>upon<sp/>completion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>std::remove(hv_file_name.c_str());</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>out<sp/>the<sp/>HV<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>out<sp/>the<sp/>HV<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir<sp/>(dir);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>open<sp/>the<sp/>data<sp/>directory&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>spawn<sp/>thread<sp/>to<sp/>collect<sp/>an<sp/>S-curve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a896eb8e27c5d4587e1c6bf9b4ba67600" kindref="member">DataAcquisition::CollectSc</ref>(<ref refid="class_zynq_manager" kindref="compound">ZynqManager</ref><sp/>*<sp/>ZqManager,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut,<sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/>CmdLine)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>collect<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>std::thread<sp/>collect_data<sp/>(&amp;DataAcquisition::ProcessIncomingData,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ConfigOut,<sp/>CmdLine);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>ZqManager-&gt;<ref refid="class_zynq_manager_1a68834210d663cb799f19c6d1a45ac727" kindref="member">Scurve</ref>(ConfigOut-&gt;<ref refid="struct_config_1a89ff46c885f7c94eef95a92edc0c4918" kindref="member">scurve_start</ref>,<sp/>ConfigOut-&gt;<ref refid="struct_config_1a42ddc101bf12c3af19223a4911f5e2dd" kindref="member">scurve_step</ref>,<sp/>ConfigOut-&gt;<ref refid="struct_config_1a3a5e4bdbceefb070ab68e9eea77b79ca" kindref="member">scurve_stop</ref>,<sp/>ConfigOut-&gt;<ref refid="struct_config_1a74a9b2aeef9bb431ba6ab05c93e98074" kindref="member">scurve_acc</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>collect_data.join();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>spawn<sp/>threads<sp/>to<sp/>collect<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a11e48bbcbc51b6c02486ccf48614f3e9" kindref="member">DataAcquisition::CollectData</ref>(<ref refid="class_zynq_manager" kindref="compound">ZynqManager</ref><sp/>*<sp/>ZqManager,<sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut,<sp/><ref refid="struct_cmd_line_inputs" kindref="compound">CmdLineInputs</ref><sp/>*<sp/>CmdLine)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>collect<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>std::thread<sp/>collect_main_data<sp/>(&amp;DataAcquisition::ProcessIncomingData,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ConfigOut,<sp/>CmdLine);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>Zynq<sp/>operational<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>number<sp/>of<sp/>N1<sp/>and<sp/>N2<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>ZqManager-&gt;<ref refid="class_zynq_manager_1a50d651ef2c6b81210553d1afe6451c3d" kindref="member">SetNPkts</ref>(ConfigOut-&gt;<ref refid="struct_config_1a6928574559db9f8737d0a123d54df876" kindref="member">N1</ref>,<sp/>ConfigOut-&gt;<ref refid="struct_config_1a9d77f19e94f4e0e1f6d5dc02273ca2e6" kindref="member">N2</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CmdLine-&gt;<ref refid="struct_cmd_line_inputs_1a5c00ff8d6306c48203584982ac2f9524" kindref="member">test_zynq_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>a<sp/>mode<sp/>to<sp/>produce<sp/>test<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>ZqManager-&gt;<ref refid="class_zynq_manager_1a6bb44cc05c5b7d2af824f250c3c5fac1" kindref="member">SetTestMode</ref>(ZqManager-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>a<sp/>mode<sp/>to<sp/>start<sp/>data<sp/>gathering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>ZqManager-&gt;<ref refid="class_zynq_manager_1ae834b6a1843ea4c7a636f0b51c9f3164" kindref="member">SetInstrumentMode</ref>(ZqManager-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>acquisition<sp/>with<sp/>the<sp/>analog<sp/>board<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>std::thread<sp/>analog<sp/>(&amp;<ref refid="class_analog_manager_1abd34bb0d49b6f0ca396000a93b82fd8a" kindref="member">AnalogManager::ProcessAnalogData</ref>,<sp/>this-&gt;<ref refid="class_operation_mode_1af24f59ca2f4db0d67f15125c48a54eeb" kindref="member">Analog</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>analog.join();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>acquisition<sp/>with<sp/>thermistors<sp/>if<sp/>required<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CmdLine-&gt;<ref refid="struct_cmd_line_inputs_1a036ab31a6d1c9b9b0c1e4b529eecfd39" kindref="member">therm_on</ref>)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>-&gt;<ref refid="class_therm_manager_1a3a4bf325f9e6474a741cba4ae10cd485" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>collect_therm_data<sp/>(&amp;<ref refid="class_therm_manager_1aa83488faa792cdd86825764a357511b8" kindref="member">ThermManager::ProcessThermData</ref>,<sp/>this-&gt;<ref refid="class_data_acquisition_1aa55f142e7fb5dececc8568427408d09e" kindref="member">ThManager</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>collect_therm_data.join();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>main<sp/>data<sp/>acquisition<sp/>thread<sp/>to<sp/>join<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>collect_main_data.join();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>reached<sp/>for<sp/>instrument<sp/>mode<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>CPU<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="class_data_acquisition_1a449b9464c65c139ecefbe7b7e4ee7753" kindref="member">CloseCpuRun</ref>(<ref refid="class_data_acquisition_1a2b314f52d5a38181186df9be9c62d20daf978f95aced804ab98e3e4027f8b8e9f" kindref="member">CPU</ref>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>Zynq<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>ZqManager-&gt;<ref refid="class_zynq_manager_1ac044c7648def418e49617258c1f1394c" kindref="member">StopAcquisition</ref>();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>out<sp/>HV<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>GetHvInfo(ConfigOut);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>function<sp/>to<sp/>generate<sp/>and<sp/>write<sp/>a<sp/>fake<sp/>Zynq<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>testing<sp/>data<sp/>format<sp/>updates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1aec3390f5ba9721d620a3ae1e4e1388ec" kindref="member">DataAcquisition::WriteFakeZynqPkt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>zynq_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref>();</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref><sp/>*<sp/>zynq_d1_packet_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref><sp/>*<sp/>zynq_d2_packet_holder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref>();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><ref refid="struct_config" kindref="compound">Config</ref><sp/>*<sp/>ConfigOut<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_config" kindref="compound">Config</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i,<sp/>j,<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>Config<sp/>to<sp/>dummy<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>ConfigOut-&gt;<ref refid="struct_config_1a6928574559db9f8737d0a123d54df876" kindref="member">N1</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>ConfigOut-&gt;<ref refid="struct_config_1a9d77f19e94f4e0e1f6d5dc02273ca2e6" kindref="member">N2</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>data<sp/>to<sp/>dummy<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>N<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a6928574559db9f8737d0a123d54df876" kindref="member">N1</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref><sp/>=<sp/>ConfigOut-&gt;<ref refid="struct_config_1a9d77f19e94f4e0e1f6d5dc02273ca2e6" kindref="member">N2</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>zynq_d1_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a1d94b329b263c474e004225dd4fef641" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a23b893db29b917924ea4753b56ace940" kindref="member">ts</ref>.<ref refid="struct_time_stamp__dual_1a069c32ea1f21bac339a12800045deb6b" kindref="member">n_gtu</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>zynq_d1_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a1d94b329b263c474e004225dd4fef641" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a7d13cbf77f0ac9961fea497928cd6726" kindref="member">trig_type</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_d1_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a1d94b329b263c474e004225dd4fef641" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a98da2c7345fff3390bfee8ad77e09d41" kindref="member">cathode_status</ref>[i]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a3497cf2e97c7a633edb4b3a3251ff266" kindref="member">N_OF_FRAMES_L1_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zynq_d1_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a1d94b329b263c474e004225dd4fef641" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l1___v2_1a50be9793b2098c22555f586de5143e9f" kindref="member">raw_data</ref>[i][j]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>.push_back(*zynq_d1_packet_holder);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zynq_d1_packet_holder;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>zynq_d2_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2_1aed19a7c327e633ea2153af04953fc4e0" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l2___v2_1a19e89e242b6a8674cbd9db880998fd17" kindref="member">ts</ref>.<ref refid="struct_time_stamp__dual_1a069c32ea1f21bac339a12800045deb6b" kindref="member">n_gtu</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>zynq_d2_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2_1aed19a7c327e633ea2153af04953fc4e0" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l2___v2_1a1ff614967ce671848ca236b6476b6caa" kindref="member">trig_type</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_d2_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2_1aed19a7c327e633ea2153af04953fc4e0" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l2___v2_1ab7188e80a6ca0b7468f82f329019ef33" kindref="member">cathode_status</ref>[i]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a0e5b82c482b19ab156b0c2cdff91fba8" kindref="member">N_OF_FRAMES_L2_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zynq_d2_packet_holder-&gt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2_1aed19a7c327e633ea2153af04953fc4e0" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l2___v2_1a46883082e7ac4c52902e32be53fae60c" kindref="member">int16_data</ref>[i][j]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>.push_back(*zynq_d2_packet_holder);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zynq_d2_packet_holder;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1ab18192f4574a82d622ff0bd51599c45a" kindref="member">ts</ref>.<ref refid="struct_time_stamp__dual_1a069c32ea1f21bac339a12800045deb6b" kindref="member">n_gtu</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1a0b5b3a518c7b54eb0d673e3909861181" kindref="member">trig_type</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1ac5e38b576cb40555b937cb62ce5706db" kindref="member">cathode_status</ref>[i]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a23f6d6a344269201242148e727da711e" kindref="member">N_OF_FRAMES_L3_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1a121a68bbb4435496e47b0851c88d8023" kindref="member">int32_data</ref>[i][j]<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>a<sp/>SynchronisedFile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;SynchronisedFile&gt;<sp/>TestFile;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="class_access" kindref="compound">Access</ref><sp/>*<sp/>TestAccess;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>TestFile<sp/>=<sp/>std::make_shared&lt;SynchronisedFile&gt;(</highlight><highlight class="stringliteral">&quot;test_zynq_packet.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>TestAccess<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_access" kindref="compound">Access</ref>(TestFile);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>to<sp/>file<sp/>&quot;test_zynq_file.dat&quot;<sp/>in<sp/>current<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TestAccess-&gt;WriteToSynchFile&lt;uint8_t<sp/>*&gt;(&amp;zynq_packet-&gt;N1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SynchronisedFile::CONSTANT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TestAccess-&gt;WriteToSynchFile&lt;uint8_t<sp/>*&gt;(&amp;zynq_packet-&gt;N2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SynchronisedFile::CONSTANT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>TestAccess-&gt;WriteToSynchFile&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref><sp/>*&gt;(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>[0],</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03a286fb0e2705e0ec8262191f44ab601d1" kindref="member">SynchronisedFile::VARIABLE_D1</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>TestAccess-&gt;WriteToSynchFile&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref><sp/>*&gt;(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>[0],</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03a767f555e5b37bb847b7e4b896f53f0d2" kindref="member">SynchronisedFile::VARIABLE_D2</ref>,<sp/>ConfigOut);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>TestAccess-&gt;WriteToSynchFile&lt;<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2" kindref="compound">Z_DATA_TYPE_SCI_L3_V2</ref><sp/>*&gt;(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_synchronised_file_1acd5d142d12a6797678dc5875628f6d03aa81b273573bc52dfa0857a3727885ec3" kindref="member">SynchronisedFile::CONSTANT</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>TestAccess-&gt;CloseSynchFile();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zynq_packet;<sp/><sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ConfigOut;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>function<sp/>to<sp/>read<sp/>the<sp/>output<sp/>of<sp/>DataAcquisition::WriteFakeZynqPkt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>used<sp/>for<sp/>testing<sp/>the<sp/>new<sp/>data<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_data_acquisition_1a56796ee38b685d91e61eee1bffe5297e" kindref="member">DataAcquisition::ReadFakeZynqPkt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>fake_zynq_pkt<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;test_zynq_packet.dat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref><sp/>*<sp/>zynq_packet<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_z_y_n_q___p_a_c_k_e_t" kindref="compound">ZYNQ_PACKET</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i,<sp/>j,<sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>to<sp/>read<sp/>file&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>size<sp/>of<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fread(&amp;zynq_packet-&gt;N1,<sp/>sizeof(zynq_packet-&gt;N1),<sp/>1,<sp/>fake_zynq_pkt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fread(&amp;zynq_packet-&gt;N2,<sp/>sizeof(zynq_packet-&gt;N2),<sp/>1,<sp/>fake_zynq_pkt);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>resize<sp/>the<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>.resize(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>.resize(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>in<sp/>the<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l1___v2" kindref="compound">Z_DATA_TYPE_SCI_L1_V2</ref>),<sp/>1,<sp/>fake_zynq_pkt);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l2___v2" kindref="compound">Z_DATA_TYPE_SCI_L2_V2</ref>),<sp/>1,<sp/>fake_zynq_pkt);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>fread(&amp;zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2" kindref="compound">Z_DATA_TYPE_SCI_L3_V2</ref>),<sp/>1,<sp/>fake_zynq_pkt);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>against<sp/>expected<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref><sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>N1!<sp/>N1<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref><sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>N2!<sp/>N2<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a4a6584494083db9281c636c45877ce52" kindref="member">N1</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a3497cf2e97c7a633edb4b3a3251ff266" kindref="member">N_OF_FRAMES_L1_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>[k].payload.raw_data[i][j]<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>D1<sp/>data:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ab548939eca7aa0be0cbb730eedb27c1c" kindref="member">level1_data</ref>[k].payload.raw_data[i][j]<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a97a65a5b6c962c29502f085e384294df" kindref="member">N2</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a0e5b82c482b19ab156b0c2cdff91fba8" kindref="member">N_OF_FRAMES_L2_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>[k].payload.int16_data[i][j]<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>D2<sp/>data:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1a3e39199b3eefd1f3014b5b9b53b1d29f" kindref="member">level2_data</ref>[k].payload.int16_data[i][j]<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>D3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a23f6d6a344269201242148e727da711e" kindref="member">N_OF_FRAMES_L3_V0</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="pdmdata_8h_1a6aedababccc5e4efa377fb5098202734" kindref="member">N_OF_PIXEL_PER_PDM</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1a121a68bbb4435496e47b0851c88d8023" kindref="member">int32_data</ref>[i][j]<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>D3<sp/>data:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>zynq_packet-&gt;<ref refid="struct_z_y_n_q___p_a_c_k_e_t_1ae780bf4cb64dc3a2f7df3b96538e6d23" kindref="member">level3_data</ref>.<ref refid="struct_z___d_a_t_a___t_y_p_e___s_c_i___l3___v2_1acf8699c1d9aaf28d0ca9f410d1ed2416" kindref="member">payload</ref>.<ref refid="struct_d_a_t_a___t_y_p_e___s_c_i___l3___v2_1a121a68bbb4435496e47b0851c88d8023" kindref="member">int32_data</ref>[i][j]<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>test<sp/>complete!<sp/>All<sp/>OK<sp/>unless<sp/>error<sp/>message<sp/>shows&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>zynq_packet;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fake_zynq_pkt);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/operations/DataAcquisition.cpp"/>
  </compounddef>
</doxygen>
