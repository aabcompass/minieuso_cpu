<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_zynq_manager_8cpp" kind="file" language="C++">
    <compoundname>ZynqManager.cpp</compoundname>
    <includes refid="_zynq_manager_8h" local="yes">ZynqManager.h</includes>
    <incdepgraph>
      <node id="837">
        <label>netinet/in.h</label>
      </node>
      <node id="839">
        <label>arpa/inet.h</label>
      </node>
      <node id="846">
        <label>iomanip</label>
      </node>
      <node id="830">
        <label>ZynqManager.h</label>
        <link refid="_zynq_manager_8h"/>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>fcntl.h</label>
      </node>
      <node id="841">
        <label>fstream</label>
      </node>
      <node id="838">
        <label>netdb.h</label>
      </node>
      <node id="836">
        <label>sys/types.h</label>
      </node>
      <node id="833">
        <label>string.h</label>
      </node>
      <node id="831">
        <label>unistd.h</label>
      </node>
      <node id="829">
        <label>src/subsystems/ZynqManager.cpp</label>
        <link refid="_zynq_manager_8cpp"/>
        <childnode refid="830" relation="include">
        </childnode>
      </node>
      <node id="844">
        <label>sstream</label>
      </node>
      <node id="843">
        <label>log.h</label>
        <link refid="log_8h"/>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
      </node>
      <node id="835">
        <label>sys/time.h</label>
      </node>
      <node id="845">
        <label>iostream</label>
      </node>
      <node id="832">
        <label>strings.h</label>
      </node>
      <node id="834">
        <label>sys/socket.h</label>
      </node>
      <node id="842">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_zynq_manager_8h" kindref="compound">ZynqManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="class_zynq_manager_1a1a7ef0b8c8708600be90524b1291508f" kindref="member">ZynqManager::ZynqManager</ref><sp/>()<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1aacfe8fa72d1bf4cfdedfd49ef7527300" kindref="member">hvps_status</ref><sp/>=<sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1ad69401c71fa8c52fd8b715ad29702a99" kindref="member">ZynqManager::UNDEF</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa0e8f29e7614620c810c56d8de4ef2f94" kindref="member">ZynqManager::MODE0</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a524dbfd45962699e76a5782e4904d65b" kindref="member">ZynqManager::T_MODE0</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>telnet<sp/>connection<sp/>on<sp/>a<sp/>certain<sp/>IP<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>closes<sp/>the<sp/>telnet<sp/>connection<sp/>after<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1adf1e86c89592758915e7357bf7989595" kindref="member">ZynqManager::CheckTelnet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>serv_addr;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*<sp/>server;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ip<sp/>=<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>fd_set<sp/>fdset;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;checking<sp/>connection<sp/>to<sp/>IP<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>socket&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>server<sp/>=<sp/>gethostbyname(ip);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(server<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>host<sp/>found<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>bzero((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>serv_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>bcopy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)server-&gt;h_addr,<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;serv_addr.sin_addr.s_addr,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>server-&gt;h_length);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>serv_addr.sin_port<sp/>=<sp/>htons(<ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opts<sp/>=<sp/>fcntl(sockfd,<sp/>F_SETFL,<sp/>O_NONBLOCK);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>connect(sockfd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>FD_ZERO(&amp;fdset);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>FD_SET(sockfd,<sp/>&amp;fdset);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>tv.tv_sec<sp/>=<sp/><ref refid="_zynq_manager_8h_1af5389293fca6f60bc4e0e330a40064f7" kindref="member">CONNECT_TIMEOUT_SEC</ref>;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>tv.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select(sockfd<sp/>+<sp/>1,<sp/>NULL,<sp/>&amp;fdset,<sp/>NULL,<sp/>&amp;tv)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>so_error;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>so_error;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getsockopt(sockfd,<sp/>SOL_SOCKET,<sp/>SO_ERROR,<sp/>&amp;so_error,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(so_error<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connected<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>opts<sp/>=<sp/>opts<sp/>&amp;<sp/>(~O_NONBLOCK);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>fcntl(sockfd,<sp/>F_SETFL,<sp/>opts);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>connecting<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Connection<sp/>timeout<sp/>to<sp/>the<sp/>Zynq<sp/>board&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connection<sp/>timeout<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a3e5cbe48e0d62ccb1b2429b165c673fb" kindref="member">telnet_connected</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>recieve<sp/>commands<sp/>over<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>be<sp/>used<sp/>inside<sp/>a<sp/>function<sp/>which<sp/>opens<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">std::string<sp/>ZynqManager::SendRecvTelnet(std::string<sp/>send_msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kSendMsg<sp/>=<sp/>send_msg.c_str();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>std::string<sp/>recv_msg;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>std::string<sp/>err_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>the<sp/>message<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>bzero(buffer,<sp/>256);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>strncpy(buffer,<sp/>kSendMsg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>send_msg.erase(std::remove(send_msg.begin(),<sp/>send_msg.end(),<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">),<sp/>send_msg.end());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sending<sp/>via<sp/>telnet:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>send_msg<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>write(sockfd,<sp/>buffer,<sp/>strlen(buffer));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>writing<sp/>to<sp/>socket&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err_msg;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>bzero(buffer,<sp/>256);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>read(sockfd,<sp/>buffer,<sp/>255);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>reading<sp/>to<sp/>socket&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err_msg;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>recv_msg<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>recv_msg.erase(std::remove(recv_msg.begin(),<sp/>recv_msg.end(),<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">),<sp/>recv_msg.end());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>recv_msg.erase(std::remove(recv_msg.begin(),<sp/>recv_msg.end(),<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">),<sp/>recv_msg.end());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;receiving<sp/>via<sp/>telnet:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recv_msg<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>recv_msg;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>connect<sp/>to<sp/>telnet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NB:<sp/>leaves<sp/>telnet<sp/>open<sp/>to<sp/>be<sp/>closed<sp/>with<sp/>a<sp/>separate<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ZynqManager::ConnectTelnet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>serv_addr;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*<sp/>server;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ip<sp/>=<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>fd_set<sp/>fdset;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;checking<sp/>connection<sp/>to<sp/>IP<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>opening<sp/>socket&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>server<sp/>=<sp/>gethostbyname(ip);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(server<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>host<sp/>found<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>bzero((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>serv_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>bcopy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)server-&gt;h_addr,<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;serv_addr.sin_addr.s_addr,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>server-&gt;h_length);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>serv_addr.sin_port<sp/>=<sp/>htons(<ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opts<sp/>=<sp/>fcntl(sockfd,<sp/>F_SETFL,<sp/>O_NONBLOCK);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>connect(sockfd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>FD_ZERO(&amp;fdset);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>FD_SET(sockfd,<sp/>&amp;fdset);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>tv.tv_sec<sp/>=<sp/><ref refid="_zynq_manager_8h_1af5389293fca6f60bc4e0e330a40064f7" kindref="member">CONNECT_TIMEOUT_SEC</ref>;<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>tv.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(select(sockfd<sp/>+<sp/>1,<sp/>NULL,<sp/>&amp;fdset,<sp/>NULL,<sp/>&amp;tv)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>so_error;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>so_error;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getsockopt(sockfd,<sp/>SOL_SOCKET,<sp/>SO_ERROR,<sp/>&amp;so_error,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(so_error<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connected<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>non-blocking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>opts<sp/>=<sp/>opts<sp/>&amp;<sp/>(~O_NONBLOCK);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>fcntl(sockfd,<sp/>F_SETFL,<sp/>opts);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>connecting<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;telnet<sp/>connection<sp/>timeout!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8a38d8fceedc756e5506313988b71d5745" kindref="member">logstream::error</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;connection<sp/>timeout<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>port<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sockfd;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>instrument<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a56b95f7ffd34292a8863cd7c39e39a0a" kindref="member">ZynqManager::GetInstStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kStatStr;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;checking<sp/>the<sp/>instrument<sp/>status&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>receive<sp/>commands<sp/>in<sp/>another<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;instrument<sp/>status\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;instrument<sp/>status:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>instrument<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>quick<sp/>test<sp/>approach<sp/>with<sp/>all<sp/>telnet<sp/>setup<sp/>in<sp/>one<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ZynqManager::InstStatusTest(std::string<sp/>send_msg)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd,<sp/>n;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>serv_addr;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">hostent<sp/>*server;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ip<sp/>=<sp/><ref refid="_zynq_manager_8h_1a28dcb0e06f55356f6f704b11177ab461" kindref="member">ZYNQ_IP</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kSendMsg<sp/>=<sp/>send_msg.c_str();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>opening<sp/>socket\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>server<sp/>=<sp/>gethostbyname(ip);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(server<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;ERROR,<sp/>no<sp/>such<sp/>host\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>bzero((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>serv_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>bcopy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)server-&gt;h_addr,<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;serv_addr.sin_addr.s_addr,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>server-&gt;h_length);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>serv_addr.sin_port<sp/>=<sp/>htons(<ref refid="_zynq_manager_8h_1ad036d23530f3aa396f7cc2dba2e8fb2e" kindref="member">TELNET_PORT</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect(sockfd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>opening<sp/>socket\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>bzero(buffer,<sp/>256);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>strncpy(buffer,<sp/>kSendMsg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>write(sockfd,<sp/>buffer,<sp/>strlen(buffer));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>opening<sp/>socket\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>bzero(buffer,<sp/>256);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>read(sockfd,<sp/>buffer,<sp/>255);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>opening<sp/>socket\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>HV<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a5259383f5f9a7e9a8816803c45d25fdd" kindref="member">ZynqManager::GetHvpsStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kStatStr;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;checking<sp/>the<sp/>HVPS<sp/>status&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>receive<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>status<sp/>gpio\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;HVPS<sp/>status:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>turn<sp/>on<sp/>the<sp/>HV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1abd4555943234c7cbeb89525f48106b0a" kindref="member">ZynqManager::HvpsTurnOn</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dv)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kStatStr;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd0,<sp/>cmd1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv0,<sp/>conv1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_time<sp/>=<sp/>500000;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;turning<sp/>on<sp/>the<sp/>HVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>cathode<sp/>voltage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>command<sp/>string<sp/>from<sp/>config<sp/>file<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>conv0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hvps<sp/>cathode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cv<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>cmd0<sp/>=<sp/>conv0.str();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd0,<sp/>sockfd);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>cathode<sp/>to<sp/>%i:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>cv,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>dynode<sp/>voltage<sp/>low<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>500<sp/>500<sp/>500<sp/>500<sp/>500<sp/>500<sp/>500<sp/>500<sp/>500\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>500:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>usleep(sleep_time);<sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>turnon<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Turn<sp/>on<sp/>HVPS:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ramp<sp/>up<sp/>in<sp/>steps<sp/>of<sp/>500<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>1000<sp/>1000<sp/>1000<sp/>1000<sp/>1000<sp/>1000<sp/>1000<sp/>1000<sp/>1000\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>1000:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>1500)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>1500<sp/>1500<sp/>1500<sp/>1500<sp/>1500<sp/>1500<sp/>1500<sp/>1500<sp/>1500\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>1500:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>2000)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>2000<sp/>2000<sp/>2000<sp/>2000<sp/>2000<sp/>2000<sp/>2000<sp/>2000<sp/>2000\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>2000:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>2500)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>2500<sp/>2500<sp/>2500<sp/>2500<sp/>2500<sp/>2500<sp/>2500<sp/>2500<sp/>2500\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>2500:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>3000)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>3000<sp/>3000<sp/>3000<sp/>3000<sp/>3000<sp/>3000<sp/>3000<sp/>3000<sp/>3000\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>3000:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dv<sp/>&gt;<sp/>3500)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>3500<sp/>3500<sp/>3500<sp/>3500<sp/>3500<sp/>3500<sp/>3500<sp/>3500<sp/>3500\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>3500:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(sleep_time);<sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>final<sp/>DAC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>conv1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hvps<sp/>setdac<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dv<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>cmd1<sp/>=<sp/>conv1.str();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd1,<sp/>sockfd);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Set<sp/>HVPS<sp/>dac<sp/>to<sp/>%i:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>dv,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>HvpsStatus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1aacfe8fa72d1bf4cfdedfd49ef7527300" kindref="member">hvps_status</ref><sp/>=<sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1ae11fe7979814ec644b6848fca4835fca" kindref="member">ZynqManager::ON</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>the<sp/>HV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a06e33d748fef60a4dc40cded5526ab75" kindref="member">ZynqManager::HvpsTurnOff</ref>()<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>kStatStr;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_time<sp/>=<sp/>500000;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;turning<sp/>off<sp/>the<sp/>HVPS&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;hvps<sp/>turnoff<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>kStatStr<sp/>=<sp/>status_string.c_str();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;HVPS<sp/>status:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>kStatStr);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>usleep(sleep_time);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>HvpsStatus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1aacfe8fa72d1bf4cfdedfd49ef7527300" kindref="member">hvps_status</ref><sp/>=<sp/><ref refid="class_zynq_manager_1aaba16a841aa0e129f0a19da666d0bcd1a8d34598513f64590dac8620c0f2f1dbb" kindref="member">ZynqManager::OFF</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>take<sp/>an<sp/>scurve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a68834210d663cb799f19c6d1a45ac727" kindref="member">ZynqManager::Scurve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acc)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;taking<sp/>an<sp/>s-curve&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>receive<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>an<sp/>s-curve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;S-Curve<sp/>acquisition<sp/>starting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;acq<sp/>scurve<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>start<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>step<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stop<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>acc<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>cmd;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>scurve<sp/>to<sp/>be<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>sleep(15);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>DAC<sp/>on<sp/>the<sp/>SPACIROCs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a96edfca4dd9f310be5fa64ca2be734ff" kindref="member">ZynqManager::SetDac</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dac_level)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>the<sp/>dac<sp/>level<sp/>to<sp/>the<sp/>SPACIROCs&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>receive<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>dac<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;slowctrl<sp/>all<sp/>dac<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dac_level<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>cmd;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Acquire<sp/>one<sp/>GTU<sp/>frame<sp/>from<sp/>the<sp/>SPACIROCs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a1fc298012cd8d33ad29b13524873b59c" kindref="member">ZynqManager::AcqShot</ref>()<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;acquiring<sp/>a<sp/>single<sp/>frame<sp/>from<sp/>the<sp/>SPACIROCs&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>and<sp/>receive<sp/>commands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>a<sp/>single<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;acq<sp/>shot&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>cmd;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>acquisition<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddf" kindref="member">ZynqManager::InstrumentMode</ref><sp/><ref refid="class_zynq_manager_1ae834b6a1843ea4c7a636f0b51c9f3164" kindref="member">ZynqManager::SetInstrumentMode</ref>(<ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddf" kindref="member">ZynqManager::InstrumentMode</ref><sp/>input_mode)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>uint32_t<sp/>timestamp<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>to<sp/>instrument<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_mode<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>input<sp/>mode<sp/>and<sp/>update<sp/>accordingly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(input_mode)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa0e8f29e7614620c810c56d8de4ef2f94" kindref="member">MODE0</ref>:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa0e8f29e7614620c810c56d8de4ef2f94" kindref="member">MODE0</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>0<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa73e5342da2e4b1777631e3b7c5e8e909" kindref="member">MODE1</ref>:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa73e5342da2e4b1777631e3b7c5e8e909" kindref="member">MODE1</ref>;<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa75200ad719a8d9e830968dca0adce503" kindref="member">PERIODIC</ref>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa75200ad719a8d9e830968dca0adce503" kindref="member">PERIODIC</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa0e53eae0b5a50de5f2d57ad95b6ae7b8" kindref="member">TRIGGER</ref>:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a34d816a00b2a70f0d48a7baf83238ddfa0e53eae0b5a50de5f2d57ad95b6ae7b8" kindref="member">TRIGGER</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>conv<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>3<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>conv.str();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd,<sp/>sockfd);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ADD<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_zynq_manager_1a45db60b5e4a84371edd526b7af16b785" kindref="member">instrument_mode</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>test<sp/>acquisition<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213" kindref="member">ZynqManager::TestMode</ref><sp/><ref refid="class_zynq_manager_1a6bb44cc05c5b7d2af824f250c3c5fac1" kindref="member">ZynqManager::SetTestMode</ref>(<ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213" kindref="member">ZynqManager::TestMode</ref><sp/>input_mode)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>to<sp/>instrument<sp/>mode<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_mode<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>input<sp/>mode<sp/>and<sp/>update<sp/>accordingly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(input_mode)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a524dbfd45962699e76a5782e4904d65b" kindref="member">T_MODE0</ref>:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a524dbfd45962699e76a5782e4904d65b" kindref="member">T_MODE0</ref>;<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>0\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a7fbe9ecf77701cacdcb53973b71d3809" kindref="member">T_MODE1</ref>:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a7fbe9ecf77701cacdcb53973b71d3809" kindref="member">T_MODE1</ref>;<sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>1\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213aa932f57b8a9dd532ed88ebc360f57fb9" kindref="member">T_MODE2</ref>:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213aa932f57b8a9dd532ed88ebc360f57fb9" kindref="member">T_MODE2</ref>;<sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>2\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213afc07035856a702cab9748ea917f4cc5c" kindref="member">T_MODE3</ref>:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213afc07035856a702cab9748ea917f4cc5c" kindref="member">T_MODE3</ref>;<sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>3\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a330a3719dda034bd09525263e3beeaf9" kindref="member">T_MODE4</ref>:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a330a3719dda034bd09525263e3beeaf9" kindref="member">T_MODE4</ref>;<sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>4\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a90ffa35e6d3bc494f592e0302f7f8ac0" kindref="member">T_MODE5</ref>:</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a90ffa35e6d3bc494f592e0302f7f8ac0" kindref="member">T_MODE5</ref>;<sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>5\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a47c3abcd551abe197ab34f15ba34f511" kindref="member">T_MODE6</ref>:</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref><sp/>=<sp/><ref refid="class_zynq_manager_1a6d040f15092709bc1b21801eb57aa213a47c3abcd551abe197ab34f15ba34f511" kindref="member">T_MODE6</ref>;<sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;acq<sp/>test<sp/>5\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ADD<sp/>THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_zynq_manager_1a28d67e4ac036dc8528dc5575563f62b2" kindref="member">test_mode</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>static<sp/>function<sp/>to<sp/>turn<sp/>off<sp/>acquisition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1ac044c7648def418e49617258c1f1394c" kindref="member">ZynqManager::StopAcquisition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;switching<sp/>off<sp/>the<sp/>Zynq<sp/>acquisition&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(</highlight><highlight class="stringliteral">&quot;instrument<sp/>mode<sp/>0\n&quot;</highlight><highlight class="normal">,<sp/>sockfd);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>number<sp/>of<sp/>packets<sp/>for<sp/>D1<sp/>and<sp/>D2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_zynq_manager_1a50d651ef2c6b81210553d1afe6451c3d" kindref="member">ZynqManager::SetNPkts</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N2)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>std::string<sp/>status_string;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd1,<sp/>cmd2;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>conv1,<sp/>conv2;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleep_time<sp/>=<sp/>500000;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><ref refid="log_8cpp_1a5e097ce023c37c3fb46e50c8b9dc8081" kindref="member">clog</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;info:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classlogstream_1af041782901906373bcfb446534757eb8aecb5cb0684970950929a1558d0efc6b7" kindref="member">logstream::info</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;setting<sp/>N1<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>N1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>N2<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>N2<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>conv1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mmg<sp/>N1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>N1<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>cmd1<sp/>=<sp/>conv1.str();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>conv2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;mmg<sp/>N2<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>N2<sp/>&lt;&lt;<sp/><ref refid="namespacestd_1a62c71844425959f42cb60f5fbbea9b0b" kindref="member">std::endl</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>cmd2<sp/>=<sp/>conv2.str();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>telnet<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>sockfd<sp/>=<sp/><ref refid="class_zynq_manager_1a80739bb8064bbce228ae57ec4e3d3ae2" kindref="member">ConnectTelnet</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd1,<sp/>sockfd);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>usleep(sleep_time);<sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>status_string<sp/>=<sp/>SendRecvTelnet(cmd2,<sp/>sockfd);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>usleep(sleep_time);<sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>close(sockfd);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/subsystems/ZynqManager.cpp"/>
  </compounddef>
</doxygen>
